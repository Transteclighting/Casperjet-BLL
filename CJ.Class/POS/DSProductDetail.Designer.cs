//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CJ.Class.POS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSProductDetail")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSProductDetail : global::System.Data.DataSet {
        
        private ProductDataTable tableProduct;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSProductDetail() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSProductDetail(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Product"] != null)) {
                    base.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductDataTable Product {
            get {
                return this.tableProduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSProductDetail cln = ((DSProductDetail)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Product"] != null)) {
                    base.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableProduct = ((ProductDataTable)(base.Tables["Product"]));
            if ((initTable == true)) {
                if ((this.tableProduct != null)) {
                    this.tableProduct.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSProductDetail";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSProductDetail.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProduct = new ProductDataTable();
            base.Tables.Add(this.tableProduct);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSProductDetail ds = new DSProductDetail();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ProductRowChangeEventHandler(object sender, ProductRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnProductDesc;
            
            private global::System.Data.DataColumn columnProductModel;
            
            private global::System.Data.DataColumn columnSmallUnitOfMeasure;
            
            private global::System.Data.DataColumn columnLargeUnitOfMeasure;
            
            private global::System.Data.DataColumn columnUOMConversionFactor;
            
            private global::System.Data.DataColumn columnNSP;
            
            private global::System.Data.DataColumn columnRSP;
            
            private global::System.Data.DataColumn columnLSRatio;
            
            private global::System.Data.DataColumn columnMSRatio;
            
            private global::System.Data.DataColumn columnPGCode;
            
            private global::System.Data.DataColumn columnPGName;
            
            private global::System.Data.DataColumn columnPGID;
            
            private global::System.Data.DataColumn columnMAGID;
            
            private global::System.Data.DataColumn columnMAGCode;
            
            private global::System.Data.DataColumn columnMAGName;
            
            private global::System.Data.DataColumn columnASGID;
            
            private global::System.Data.DataColumn columnASGCode;
            
            private global::System.Data.DataColumn columnASGName;
            
            private global::System.Data.DataColumn columnAGID;
            
            private global::System.Data.DataColumn columnAGCode;
            
            private global::System.Data.DataColumn columnAGName;
            
            private global::System.Data.DataColumn columnBrandID;
            
            private global::System.Data.DataColumn columnBrandCode;
            
            private global::System.Data.DataColumn columnBrandDesc;
            
            private global::System.Data.DataColumn columnVatApplicable;
            
            private global::System.Data.DataColumn columnVAT;
            
            private global::System.Data.DataColumn columnTradePrice;
            
            private global::System.Data.DataColumn columnSpecialPrice;
            
            private global::System.Data.DataColumn columnTransferType;
            
            private global::System.Data.DataColumn columnCostPrice;
            
            private global::System.Data.DataColumn columnItemCategory;
            
            private global::System.Data.DataColumn columnBarcodeApplicable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductDataTable() {
                this.TableName = "Product";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProductDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductDescColumn {
                get {
                    return this.columnProductDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductModelColumn {
                get {
                    return this.columnProductModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SmallUnitOfMeasureColumn {
                get {
                    return this.columnSmallUnitOfMeasure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LargeUnitOfMeasureColumn {
                get {
                    return this.columnLargeUnitOfMeasure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMConversionFactorColumn {
                get {
                    return this.columnUOMConversionFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NSPColumn {
                get {
                    return this.columnNSP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RSPColumn {
                get {
                    return this.columnRSP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LSRatioColumn {
                get {
                    return this.columnLSRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSRatioColumn {
                get {
                    return this.columnMSRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PGCodeColumn {
                get {
                    return this.columnPGCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PGNameColumn {
                get {
                    return this.columnPGName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PGIDColumn {
                get {
                    return this.columnPGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGIDColumn {
                get {
                    return this.columnMAGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGCodeColumn {
                get {
                    return this.columnMAGCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAGNameColumn {
                get {
                    return this.columnMAGName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASGIDColumn {
                get {
                    return this.columnASGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASGCodeColumn {
                get {
                    return this.columnASGCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASGNameColumn {
                get {
                    return this.columnASGName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AGIDColumn {
                get {
                    return this.columnAGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AGCodeColumn {
                get {
                    return this.columnAGCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AGNameColumn {
                get {
                    return this.columnAGName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandIDColumn {
                get {
                    return this.columnBrandID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandCodeColumn {
                get {
                    return this.columnBrandCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandDescColumn {
                get {
                    return this.columnBrandDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatApplicableColumn {
                get {
                    return this.columnVatApplicable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.columnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TradePriceColumn {
                get {
                    return this.columnTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialPriceColumn {
                get {
                    return this.columnSpecialPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransferTypeColumn {
                get {
                    return this.columnTransferType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostPriceColumn {
                get {
                    return this.columnCostPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCategoryColumn {
                get {
                    return this.columnItemCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarcodeApplicableColumn {
                get {
                    return this.columnBarcodeApplicable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRow this[int index] {
                get {
                    return ((ProductRow)(this.Rows[index]));
                }
            }
            
            public event ProductRowChangeEventHandler ProductRowChanging;
            
            public event ProductRowChangeEventHandler ProductRowChanged;
            
            public event ProductRowChangeEventHandler ProductRowDeleting;
            
            public event ProductRowChangeEventHandler ProductRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProductRow(ProductRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRow AddProductRow(
                        long ProductID, 
                        string ProductCode, 
                        string ProductName, 
                        string ProductDesc, 
                        string ProductModel, 
                        string SmallUnitOfMeasure, 
                        string LargeUnitOfMeasure, 
                        double UOMConversionFactor, 
                        double NSP, 
                        double RSP, 
                        int LSRatio, 
                        int MSRatio, 
                        string PGCode, 
                        string PGName, 
                        int PGID, 
                        int MAGID, 
                        string MAGCode, 
                        string MAGName, 
                        int ASGID, 
                        string ASGCode, 
                        string ASGName, 
                        int AGID, 
                        string AGCode, 
                        string AGName, 
                        int BrandID, 
                        string BrandCode, 
                        string BrandDesc, 
                        int VatApplicable, 
                        double VAT, 
                        double TradePrice, 
                        double SpecialPrice, 
                        int TransferType, 
                        double CostPrice, 
                        int ItemCategory, 
                        int BarcodeApplicable) {
                ProductRow rowProductRow = ((ProductRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProductID,
                        ProductCode,
                        ProductName,
                        ProductDesc,
                        ProductModel,
                        SmallUnitOfMeasure,
                        LargeUnitOfMeasure,
                        UOMConversionFactor,
                        NSP,
                        RSP,
                        LSRatio,
                        MSRatio,
                        PGCode,
                        PGName,
                        PGID,
                        MAGID,
                        MAGCode,
                        MAGName,
                        ASGID,
                        ASGCode,
                        ASGName,
                        AGID,
                        AGCode,
                        AGName,
                        BrandID,
                        BrandCode,
                        BrandDesc,
                        VatApplicable,
                        VAT,
                        TradePrice,
                        SpecialPrice,
                        TransferType,
                        CostPrice,
                        ItemCategory,
                        BarcodeApplicable};
                rowProductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductRow);
                return rowProductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProductDataTable cln = ((ProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProductID = base.Columns["ProductID"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnProductDesc = base.Columns["ProductDesc"];
                this.columnProductModel = base.Columns["ProductModel"];
                this.columnSmallUnitOfMeasure = base.Columns["SmallUnitOfMeasure"];
                this.columnLargeUnitOfMeasure = base.Columns["LargeUnitOfMeasure"];
                this.columnUOMConversionFactor = base.Columns["UOMConversionFactor"];
                this.columnNSP = base.Columns["NSP"];
                this.columnRSP = base.Columns["RSP"];
                this.columnLSRatio = base.Columns["LSRatio"];
                this.columnMSRatio = base.Columns["MSRatio"];
                this.columnPGCode = base.Columns["PGCode"];
                this.columnPGName = base.Columns["PGName"];
                this.columnPGID = base.Columns["PGID"];
                this.columnMAGID = base.Columns["MAGID"];
                this.columnMAGCode = base.Columns["MAGCode"];
                this.columnMAGName = base.Columns["MAGName"];
                this.columnASGID = base.Columns["ASGID"];
                this.columnASGCode = base.Columns["ASGCode"];
                this.columnASGName = base.Columns["ASGName"];
                this.columnAGID = base.Columns["AGID"];
                this.columnAGCode = base.Columns["AGCode"];
                this.columnAGName = base.Columns["AGName"];
                this.columnBrandID = base.Columns["BrandID"];
                this.columnBrandCode = base.Columns["BrandCode"];
                this.columnBrandDesc = base.Columns["BrandDesc"];
                this.columnVatApplicable = base.Columns["VatApplicable"];
                this.columnVAT = base.Columns["VAT"];
                this.columnTradePrice = base.Columns["TradePrice"];
                this.columnSpecialPrice = base.Columns["SpecialPrice"];
                this.columnTransferType = base.Columns["TransferType"];
                this.columnCostPrice = base.Columns["CostPrice"];
                this.columnItemCategory = base.Columns["ItemCategory"];
                this.columnBarcodeApplicable = base.Columns["BarcodeApplicable"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnProductDesc = new global::System.Data.DataColumn("ProductDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductDesc);
                this.columnProductModel = new global::System.Data.DataColumn("ProductModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductModel);
                this.columnSmallUnitOfMeasure = new global::System.Data.DataColumn("SmallUnitOfMeasure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSmallUnitOfMeasure);
                this.columnLargeUnitOfMeasure = new global::System.Data.DataColumn("LargeUnitOfMeasure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLargeUnitOfMeasure);
                this.columnUOMConversionFactor = new global::System.Data.DataColumn("UOMConversionFactor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOMConversionFactor);
                this.columnNSP = new global::System.Data.DataColumn("NSP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSP);
                this.columnRSP = new global::System.Data.DataColumn("RSP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRSP);
                this.columnLSRatio = new global::System.Data.DataColumn("LSRatio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSRatio);
                this.columnMSRatio = new global::System.Data.DataColumn("MSRatio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRatio);
                this.columnPGCode = new global::System.Data.DataColumn("PGCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPGCode);
                this.columnPGName = new global::System.Data.DataColumn("PGName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPGName);
                this.columnPGID = new global::System.Data.DataColumn("PGID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPGID);
                this.columnMAGID = new global::System.Data.DataColumn("MAGID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGID);
                this.columnMAGCode = new global::System.Data.DataColumn("MAGCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGCode);
                this.columnMAGName = new global::System.Data.DataColumn("MAGName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAGName);
                this.columnASGID = new global::System.Data.DataColumn("ASGID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASGID);
                this.columnASGCode = new global::System.Data.DataColumn("ASGCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASGCode);
                this.columnASGName = new global::System.Data.DataColumn("ASGName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASGName);
                this.columnAGID = new global::System.Data.DataColumn("AGID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGID);
                this.columnAGCode = new global::System.Data.DataColumn("AGCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGCode);
                this.columnAGName = new global::System.Data.DataColumn("AGName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGName);
                this.columnBrandID = new global::System.Data.DataColumn("BrandID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandID);
                this.columnBrandCode = new global::System.Data.DataColumn("BrandCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandCode);
                this.columnBrandDesc = new global::System.Data.DataColumn("BrandDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandDesc);
                this.columnVatApplicable = new global::System.Data.DataColumn("VatApplicable", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatApplicable);
                this.columnVAT = new global::System.Data.DataColumn("VAT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT);
                this.columnTradePrice = new global::System.Data.DataColumn("TradePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradePrice);
                this.columnSpecialPrice = new global::System.Data.DataColumn("SpecialPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialPrice);
                this.columnTransferType = new global::System.Data.DataColumn("TransferType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferType);
                this.columnCostPrice = new global::System.Data.DataColumn("CostPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostPrice);
                this.columnItemCategory = new global::System.Data.DataColumn("ItemCategory", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCategory);
                this.columnBarcodeApplicable = new global::System.Data.DataColumn("BarcodeApplicable", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcodeApplicable);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRow NewProductRow() {
                return ((ProductRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProductRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductRowChanged != null)) {
                    this.ProductRowChanged(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductRowChanging != null)) {
                    this.ProductRowChanging(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductRowDeleted != null)) {
                    this.ProductRowDeleted(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductRowDeleting != null)) {
                    this.ProductRowDeleting(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProductRow(ProductRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSProductDetail ds = new DSProductDetail();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProductRow : global::System.Data.DataRow {
            
            private ProductDataTable tableProduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProduct = ((ProductDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ProductID {
                get {
                    try {
                        return ((long)(this[this.tableProduct.ProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductID\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductDesc {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ProductDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductDesc\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ProductDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductModel {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ProductModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductModel\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ProductModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SmallUnitOfMeasure {
                get {
                    try {
                        return ((string)(this[this.tableProduct.SmallUnitOfMeasureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SmallUnitOfMeasure\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.SmallUnitOfMeasureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LargeUnitOfMeasure {
                get {
                    try {
                        return ((string)(this[this.tableProduct.LargeUnitOfMeasureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LargeUnitOfMeasure\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.LargeUnitOfMeasureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UOMConversionFactor {
                get {
                    try {
                        return ((double)(this[this.tableProduct.UOMConversionFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOMConversionFactor\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.UOMConversionFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NSP {
                get {
                    try {
                        return ((double)(this[this.tableProduct.NSPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NSP\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.NSPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double RSP {
                get {
                    try {
                        return ((double)(this[this.tableProduct.RSPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RSP\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.RSPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LSRatio {
                get {
                    try {
                        return ((int)(this[this.tableProduct.LSRatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSRatio\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.LSRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MSRatio {
                get {
                    try {
                        return ((int)(this[this.tableProduct.MSRatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MSRatio\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.MSRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PGCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.PGCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PGCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.PGCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PGName {
                get {
                    try {
                        return ((string)(this[this.tableProduct.PGNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PGName\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.PGNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PGID {
                get {
                    try {
                        return ((int)(this[this.tableProduct.PGIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PGID\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.PGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MAGID {
                get {
                    try {
                        return ((int)(this[this.tableProduct.MAGIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGID\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.MAGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.MAGCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.MAGCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAGName {
                get {
                    try {
                        return ((string)(this[this.tableProduct.MAGNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAGName\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.MAGNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ASGID {
                get {
                    try {
                        return ((int)(this[this.tableProduct.ASGIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASGID\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ASGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASGCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ASGCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASGCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ASGCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASGName {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ASGNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASGName\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ASGNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AGID {
                get {
                    try {
                        return ((int)(this[this.tableProduct.AGIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AGID\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.AGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AGCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.AGCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AGCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.AGCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AGName {
                get {
                    try {
                        return ((string)(this[this.tableProduct.AGNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AGName\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.AGNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BrandID {
                get {
                    try {
                        return ((int)(this[this.tableProduct.BrandIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandID\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.BrandIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BrandCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.BrandCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.BrandCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BrandDesc {
                get {
                    try {
                        return ((string)(this[this.tableProduct.BrandDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandDesc\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.BrandDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VatApplicable {
                get {
                    try {
                        return ((int)(this[this.tableProduct.VatApplicableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatApplicable\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.VatApplicableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VAT {
                get {
                    try {
                        return ((double)(this[this.tableProduct.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TradePrice {
                get {
                    try {
                        return ((double)(this[this.tableProduct.TradePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradePrice\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.TradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SpecialPrice {
                get {
                    try {
                        return ((double)(this[this.tableProduct.SpecialPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialPrice\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.SpecialPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TransferType {
                get {
                    try {
                        return ((int)(this[this.tableProduct.TransferTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferType\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.TransferTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CostPrice {
                get {
                    try {
                        return ((double)(this[this.tableProduct.CostPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostPrice\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.CostPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ItemCategory {
                get {
                    try {
                        return ((int)(this[this.tableProduct.ItemCategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCategory\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ItemCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BarcodeApplicable {
                get {
                    try {
                        return ((int)(this[this.tableProduct.BarcodeApplicableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BarcodeApplicable\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.BarcodeApplicableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductIDNull() {
                return this.IsNull(this.tableProduct.ProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductIDNull() {
                this[this.tableProduct.ProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableProduct.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tableProduct.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableProduct.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableProduct.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductDescNull() {
                return this.IsNull(this.tableProduct.ProductDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductDescNull() {
                this[this.tableProduct.ProductDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductModelNull() {
                return this.IsNull(this.tableProduct.ProductModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductModelNull() {
                this[this.tableProduct.ProductModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSmallUnitOfMeasureNull() {
                return this.IsNull(this.tableProduct.SmallUnitOfMeasureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSmallUnitOfMeasureNull() {
                this[this.tableProduct.SmallUnitOfMeasureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLargeUnitOfMeasureNull() {
                return this.IsNull(this.tableProduct.LargeUnitOfMeasureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLargeUnitOfMeasureNull() {
                this[this.tableProduct.LargeUnitOfMeasureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMConversionFactorNull() {
                return this.IsNull(this.tableProduct.UOMConversionFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMConversionFactorNull() {
                this[this.tableProduct.UOMConversionFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNSPNull() {
                return this.IsNull(this.tableProduct.NSPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNSPNull() {
                this[this.tableProduct.NSPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRSPNull() {
                return this.IsNull(this.tableProduct.RSPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRSPNull() {
                this[this.tableProduct.RSPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLSRatioNull() {
                return this.IsNull(this.tableProduct.LSRatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLSRatioNull() {
                this[this.tableProduct.LSRatioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSRatioNull() {
                return this.IsNull(this.tableProduct.MSRatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSRatioNull() {
                this[this.tableProduct.MSRatioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPGCodeNull() {
                return this.IsNull(this.tableProduct.PGCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPGCodeNull() {
                this[this.tableProduct.PGCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPGNameNull() {
                return this.IsNull(this.tableProduct.PGNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPGNameNull() {
                this[this.tableProduct.PGNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPGIDNull() {
                return this.IsNull(this.tableProduct.PGIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPGIDNull() {
                this[this.tableProduct.PGIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGIDNull() {
                return this.IsNull(this.tableProduct.MAGIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGIDNull() {
                this[this.tableProduct.MAGIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGCodeNull() {
                return this.IsNull(this.tableProduct.MAGCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGCodeNull() {
                this[this.tableProduct.MAGCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAGNameNull() {
                return this.IsNull(this.tableProduct.MAGNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAGNameNull() {
                this[this.tableProduct.MAGNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASGIDNull() {
                return this.IsNull(this.tableProduct.ASGIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASGIDNull() {
                this[this.tableProduct.ASGIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASGCodeNull() {
                return this.IsNull(this.tableProduct.ASGCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASGCodeNull() {
                this[this.tableProduct.ASGCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASGNameNull() {
                return this.IsNull(this.tableProduct.ASGNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASGNameNull() {
                this[this.tableProduct.ASGNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAGIDNull() {
                return this.IsNull(this.tableProduct.AGIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAGIDNull() {
                this[this.tableProduct.AGIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAGCodeNull() {
                return this.IsNull(this.tableProduct.AGCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAGCodeNull() {
                this[this.tableProduct.AGCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAGNameNull() {
                return this.IsNull(this.tableProduct.AGNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAGNameNull() {
                this[this.tableProduct.AGNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandIDNull() {
                return this.IsNull(this.tableProduct.BrandIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandIDNull() {
                this[this.tableProduct.BrandIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandCodeNull() {
                return this.IsNull(this.tableProduct.BrandCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandCodeNull() {
                this[this.tableProduct.BrandCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandDescNull() {
                return this.IsNull(this.tableProduct.BrandDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandDescNull() {
                this[this.tableProduct.BrandDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatApplicableNull() {
                return this.IsNull(this.tableProduct.VatApplicableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatApplicableNull() {
                this[this.tableProduct.VatApplicableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tableProduct.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tableProduct.VATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTradePriceNull() {
                return this.IsNull(this.tableProduct.TradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTradePriceNull() {
                this[this.tableProduct.TradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecialPriceNull() {
                return this.IsNull(this.tableProduct.SpecialPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecialPriceNull() {
                this[this.tableProduct.SpecialPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransferTypeNull() {
                return this.IsNull(this.tableProduct.TransferTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransferTypeNull() {
                this[this.tableProduct.TransferTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostPriceNull() {
                return this.IsNull(this.tableProduct.CostPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostPriceNull() {
                this[this.tableProduct.CostPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCategoryNull() {
                return this.IsNull(this.tableProduct.ItemCategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCategoryNull() {
                this[this.tableProduct.ItemCategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarcodeApplicableNull() {
                return this.IsNull(this.tableProduct.BarcodeApplicableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarcodeApplicableNull() {
                this[this.tableProduct.BarcodeApplicableColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProductRowChangeEvent : global::System.EventArgs {
            
            private ProductRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRowChangeEvent(ProductRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591