//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CJ.Class.POS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSSalesInvoiceEcommerce")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSSalesInvoiceEcommerce : global::System.Data.DataSet {
        
        private SalesInvoiceEcommerceDataTable tableSalesInvoiceEcommerce;
        
        private SalesInvoiceEcommerceDetailDataTable tableSalesInvoiceEcommerceDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSSalesInvoiceEcommerce() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSSalesInvoiceEcommerce(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SalesInvoiceEcommerce"] != null)) {
                    base.Tables.Add(new SalesInvoiceEcommerceDataTable(ds.Tables["SalesInvoiceEcommerce"]));
                }
                if ((ds.Tables["SalesInvoiceEcommerceDetail"] != null)) {
                    base.Tables.Add(new SalesInvoiceEcommerceDetailDataTable(ds.Tables["SalesInvoiceEcommerceDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesInvoiceEcommerceDataTable SalesInvoiceEcommerce {
            get {
                return this.tableSalesInvoiceEcommerce;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesInvoiceEcommerceDetailDataTable SalesInvoiceEcommerceDetail {
            get {
                return this.tableSalesInvoiceEcommerceDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSSalesInvoiceEcommerce cln = ((DSSalesInvoiceEcommerce)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SalesInvoiceEcommerce"] != null)) {
                    base.Tables.Add(new SalesInvoiceEcommerceDataTable(ds.Tables["SalesInvoiceEcommerce"]));
                }
                if ((ds.Tables["SalesInvoiceEcommerceDetail"] != null)) {
                    base.Tables.Add(new SalesInvoiceEcommerceDetailDataTable(ds.Tables["SalesInvoiceEcommerceDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSalesInvoiceEcommerce = ((SalesInvoiceEcommerceDataTable)(base.Tables["SalesInvoiceEcommerce"]));
            if ((initTable == true)) {
                if ((this.tableSalesInvoiceEcommerce != null)) {
                    this.tableSalesInvoiceEcommerce.InitVars();
                }
            }
            this.tableSalesInvoiceEcommerceDetail = ((SalesInvoiceEcommerceDetailDataTable)(base.Tables["SalesInvoiceEcommerceDetail"]));
            if ((initTable == true)) {
                if ((this.tableSalesInvoiceEcommerceDetail != null)) {
                    this.tableSalesInvoiceEcommerceDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSSalesInvoiceEcommerce";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSSalesInvoiceEcommerce.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSalesInvoiceEcommerce = new SalesInvoiceEcommerceDataTable();
            base.Tables.Add(this.tableSalesInvoiceEcommerce);
            this.tableSalesInvoiceEcommerceDetail = new SalesInvoiceEcommerceDetailDataTable();
            base.Tables.Add(this.tableSalesInvoiceEcommerceDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesInvoiceEcommerce() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesInvoiceEcommerceDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSSalesInvoiceEcommerce ds = new DSSalesInvoiceEcommerce();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SalesInvoiceEcommerceRowChangeEventHandler(object sender, SalesInvoiceEcommerceRowChangeEvent e);
        
        public delegate void SalesInvoiceEcommerceDetailRowChangeEventHandler(object sender, SalesInvoiceEcommerceDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesInvoiceEcommerceDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEComOrderID;
            
            private global::System.Data.DataColumn columnLeadType;
            
            private global::System.Data.DataColumn columnOrderNo;
            
            private global::System.Data.DataColumn columnOrderDate;
            
            private global::System.Data.DataColumn columnOutlet;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDeliveryCharge;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnCopunNo;
            
            private global::System.Data.DataColumn columnConsumerID;
            
            private global::System.Data.DataColumn columnConsumerName;
            
            private global::System.Data.DataColumn columnAddrress;
            
            private global::System.Data.DataColumn columnDeliveryAddress;
            
            private global::System.Data.DataColumn columnContactNo;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnPaymentType;
            
            private global::System.Data.DataColumn columnSalesPersonID;
            
            private global::System.Data.DataColumn columnBankID;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnCardTypeID;
            
            private global::System.Data.DataColumn columnCardType;
            
            private global::System.Data.DataColumn columnIsEMI;
            
            private global::System.Data.DataColumn columnNoOfInstallment;
            
            private global::System.Data.DataColumn columnInstrumentNo;
            
            private global::System.Data.DataColumn columnInstrumentDate;
            
            private global::System.Data.DataColumn columnCardCategoryID;
            
            private global::System.Data.DataColumn columnCardCategory;
            
            private global::System.Data.DataColumn columnApprovalNo;
            
            private global::System.Data.DataColumn columnRefInvoiceNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceEcommerceDataTable() {
                this.TableName = "SalesInvoiceEcommerce";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoiceEcommerceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesInvoiceEcommerceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EComOrderIDColumn {
                get {
                    return this.columnEComOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadTypeColumn {
                get {
                    return this.columnLeadType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderNoColumn {
                get {
                    return this.columnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderDateColumn {
                get {
                    return this.columnOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletColumn {
                get {
                    return this.columnOutlet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryChargeColumn {
                get {
                    return this.columnDeliveryCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CopunNoColumn {
                get {
                    return this.columnCopunNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsumerIDColumn {
                get {
                    return this.columnConsumerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsumerNameColumn {
                get {
                    return this.columnConsumerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddrressColumn {
                get {
                    return this.columnAddrress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryAddressColumn {
                get {
                    return this.columnDeliveryAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNoColumn {
                get {
                    return this.columnContactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentTypeColumn {
                get {
                    return this.columnPaymentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesPersonIDColumn {
                get {
                    return this.columnSalesPersonID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardTypeIDColumn {
                get {
                    return this.columnCardTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardTypeColumn {
                get {
                    return this.columnCardType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsEMIColumn {
                get {
                    return this.columnIsEMI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoOfInstallmentColumn {
                get {
                    return this.columnNoOfInstallment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstrumentNoColumn {
                get {
                    return this.columnInstrumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstrumentDateColumn {
                get {
                    return this.columnInstrumentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardCategoryIDColumn {
                get {
                    return this.columnCardCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardCategoryColumn {
                get {
                    return this.columnCardCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApprovalNoColumn {
                get {
                    return this.columnApprovalNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefInvoiceNoColumn {
                get {
                    return this.columnRefInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceEcommerceRow this[int index] {
                get {
                    return ((SalesInvoiceEcommerceRow)(this.Rows[index]));
                }
            }
            
            public event SalesInvoiceEcommerceRowChangeEventHandler SalesInvoiceEcommerceRowChanging;
            
            public event SalesInvoiceEcommerceRowChangeEventHandler SalesInvoiceEcommerceRowChanged;
            
            public event SalesInvoiceEcommerceRowChangeEventHandler SalesInvoiceEcommerceRowDeleting;
            
            public event SalesInvoiceEcommerceRowChangeEventHandler SalesInvoiceEcommerceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesInvoiceEcommerceRow(SalesInvoiceEcommerceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceEcommerceRow AddSalesInvoiceEcommerceRow(
                        int EComOrderID, 
                        int LeadType, 
                        string OrderNo, 
                        System.DateTime OrderDate, 
                        string Outlet, 
                        double Amount, 
                        double DeliveryCharge, 
                        double Discount, 
                        string CopunNo, 
                        int ConsumerID, 
                        string ConsumerName, 
                        string Addrress, 
                        string DeliveryAddress, 
                        string ContactNo, 
                        string Email, 
                        string Remarks, 
                        int Status, 
                        int PaymentType, 
                        int SalesPersonID, 
                        int BankID, 
                        string BankName, 
                        int CardTypeID, 
                        string CardType, 
                        int IsEMI, 
                        int NoOfInstallment, 
                        string InstrumentNo, 
                        System.DateTime InstrumentDate, 
                        int CardCategoryID, 
                        string CardCategory, 
                        string ApprovalNo, 
                        string RefInvoiceNo) {
                SalesInvoiceEcommerceRow rowSalesInvoiceEcommerceRow = ((SalesInvoiceEcommerceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EComOrderID,
                        LeadType,
                        OrderNo,
                        OrderDate,
                        Outlet,
                        Amount,
                        DeliveryCharge,
                        Discount,
                        CopunNo,
                        ConsumerID,
                        ConsumerName,
                        Addrress,
                        DeliveryAddress,
                        ContactNo,
                        Email,
                        Remarks,
                        Status,
                        PaymentType,
                        SalesPersonID,
                        BankID,
                        BankName,
                        CardTypeID,
                        CardType,
                        IsEMI,
                        NoOfInstallment,
                        InstrumentNo,
                        InstrumentDate,
                        CardCategoryID,
                        CardCategory,
                        ApprovalNo,
                        RefInvoiceNo};
                rowSalesInvoiceEcommerceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesInvoiceEcommerceRow);
                return rowSalesInvoiceEcommerceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesInvoiceEcommerceDataTable cln = ((SalesInvoiceEcommerceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesInvoiceEcommerceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEComOrderID = base.Columns["EComOrderID"];
                this.columnLeadType = base.Columns["LeadType"];
                this.columnOrderNo = base.Columns["OrderNo"];
                this.columnOrderDate = base.Columns["OrderDate"];
                this.columnOutlet = base.Columns["Outlet"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDeliveryCharge = base.Columns["DeliveryCharge"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnCopunNo = base.Columns["CopunNo"];
                this.columnConsumerID = base.Columns["ConsumerID"];
                this.columnConsumerName = base.Columns["ConsumerName"];
                this.columnAddrress = base.Columns["Addrress"];
                this.columnDeliveryAddress = base.Columns["DeliveryAddress"];
                this.columnContactNo = base.Columns["ContactNo"];
                this.columnEmail = base.Columns["Email"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnStatus = base.Columns["Status"];
                this.columnPaymentType = base.Columns["PaymentType"];
                this.columnSalesPersonID = base.Columns["SalesPersonID"];
                this.columnBankID = base.Columns["BankID"];
                this.columnBankName = base.Columns["BankName"];
                this.columnCardTypeID = base.Columns["CardTypeID"];
                this.columnCardType = base.Columns["CardType"];
                this.columnIsEMI = base.Columns["IsEMI"];
                this.columnNoOfInstallment = base.Columns["NoOfInstallment"];
                this.columnInstrumentNo = base.Columns["InstrumentNo"];
                this.columnInstrumentDate = base.Columns["InstrumentDate"];
                this.columnCardCategoryID = base.Columns["CardCategoryID"];
                this.columnCardCategory = base.Columns["CardCategory"];
                this.columnApprovalNo = base.Columns["ApprovalNo"];
                this.columnRefInvoiceNo = base.Columns["RefInvoiceNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEComOrderID = new global::System.Data.DataColumn("EComOrderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEComOrderID);
                this.columnLeadType = new global::System.Data.DataColumn("LeadType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadType);
                this.columnOrderNo = new global::System.Data.DataColumn("OrderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNo);
                this.columnOrderDate = new global::System.Data.DataColumn("OrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDate);
                this.columnOutlet = new global::System.Data.DataColumn("Outlet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutlet);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDeliveryCharge = new global::System.Data.DataColumn("DeliveryCharge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryCharge);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnCopunNo = new global::System.Data.DataColumn("CopunNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCopunNo);
                this.columnConsumerID = new global::System.Data.DataColumn("ConsumerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumerID);
                this.columnConsumerName = new global::System.Data.DataColumn("ConsumerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumerName);
                this.columnAddrress = new global::System.Data.DataColumn("Addrress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrress);
                this.columnDeliveryAddress = new global::System.Data.DataColumn("DeliveryAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryAddress);
                this.columnContactNo = new global::System.Data.DataColumn("ContactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactNo);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.columnSalesPersonID = new global::System.Data.DataColumn("SalesPersonID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPersonID);
                this.columnBankID = new global::System.Data.DataColumn("BankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnCardTypeID = new global::System.Data.DataColumn("CardTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardTypeID);
                this.columnCardType = new global::System.Data.DataColumn("CardType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardType);
                this.columnIsEMI = new global::System.Data.DataColumn("IsEMI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsEMI);
                this.columnNoOfInstallment = new global::System.Data.DataColumn("NoOfInstallment", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoOfInstallment);
                this.columnInstrumentNo = new global::System.Data.DataColumn("InstrumentNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstrumentNo);
                this.columnInstrumentDate = new global::System.Data.DataColumn("InstrumentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstrumentDate);
                this.columnCardCategoryID = new global::System.Data.DataColumn("CardCategoryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardCategoryID);
                this.columnCardCategory = new global::System.Data.DataColumn("CardCategory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardCategory);
                this.columnApprovalNo = new global::System.Data.DataColumn("ApprovalNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalNo);
                this.columnRefInvoiceNo = new global::System.Data.DataColumn("RefInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefInvoiceNo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceEcommerceRow NewSalesInvoiceEcommerceRow() {
                return ((SalesInvoiceEcommerceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesInvoiceEcommerceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesInvoiceEcommerceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesInvoiceEcommerceRowChanged != null)) {
                    this.SalesInvoiceEcommerceRowChanged(this, new SalesInvoiceEcommerceRowChangeEvent(((SalesInvoiceEcommerceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesInvoiceEcommerceRowChanging != null)) {
                    this.SalesInvoiceEcommerceRowChanging(this, new SalesInvoiceEcommerceRowChangeEvent(((SalesInvoiceEcommerceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesInvoiceEcommerceRowDeleted != null)) {
                    this.SalesInvoiceEcommerceRowDeleted(this, new SalesInvoiceEcommerceRowChangeEvent(((SalesInvoiceEcommerceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesInvoiceEcommerceRowDeleting != null)) {
                    this.SalesInvoiceEcommerceRowDeleting(this, new SalesInvoiceEcommerceRowChangeEvent(((SalesInvoiceEcommerceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesInvoiceEcommerceRow(SalesInvoiceEcommerceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSSalesInvoiceEcommerce ds = new DSSalesInvoiceEcommerce();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesInvoiceEcommerceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesInvoiceEcommerceDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEcomOrderID;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnDiscountAmount;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnIsFreeQty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceEcommerceDetailDataTable() {
                this.TableName = "SalesInvoiceEcommerceDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoiceEcommerceDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesInvoiceEcommerceDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EcomOrderIDColumn {
                get {
                    return this.columnEcomOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountAmountColumn {
                get {
                    return this.columnDiscountAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsFreeQtyColumn {
                get {
                    return this.columnIsFreeQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceEcommerceDetailRow this[int index] {
                get {
                    return ((SalesInvoiceEcommerceDetailRow)(this.Rows[index]));
                }
            }
            
            public event SalesInvoiceEcommerceDetailRowChangeEventHandler SalesInvoiceEcommerceDetailRowChanging;
            
            public event SalesInvoiceEcommerceDetailRowChangeEventHandler SalesInvoiceEcommerceDetailRowChanged;
            
            public event SalesInvoiceEcommerceDetailRowChangeEventHandler SalesInvoiceEcommerceDetailRowDeleting;
            
            public event SalesInvoiceEcommerceDetailRowChangeEventHandler SalesInvoiceEcommerceDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesInvoiceEcommerceDetailRow(SalesInvoiceEcommerceDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceEcommerceDetailRow AddSalesInvoiceEcommerceDetailRow(int EcomOrderID, string ProductCode, string ProductName, double UnitPrice, double DiscountAmount, int Quantity, int IsFreeQty) {
                SalesInvoiceEcommerceDetailRow rowSalesInvoiceEcommerceDetailRow = ((SalesInvoiceEcommerceDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EcomOrderID,
                        ProductCode,
                        ProductName,
                        UnitPrice,
                        DiscountAmount,
                        Quantity,
                        IsFreeQty};
                rowSalesInvoiceEcommerceDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesInvoiceEcommerceDetailRow);
                return rowSalesInvoiceEcommerceDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesInvoiceEcommerceDetailDataTable cln = ((SalesInvoiceEcommerceDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesInvoiceEcommerceDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEcomOrderID = base.Columns["EcomOrderID"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnDiscountAmount = base.Columns["DiscountAmount"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnIsFreeQty = base.Columns["IsFreeQty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEcomOrderID = new global::System.Data.DataColumn("EcomOrderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEcomOrderID);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnDiscountAmount = new global::System.Data.DataColumn("DiscountAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountAmount);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnIsFreeQty = new global::System.Data.DataColumn("IsFreeQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFreeQty);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceEcommerceDetailRow NewSalesInvoiceEcommerceDetailRow() {
                return ((SalesInvoiceEcommerceDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesInvoiceEcommerceDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesInvoiceEcommerceDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesInvoiceEcommerceDetailRowChanged != null)) {
                    this.SalesInvoiceEcommerceDetailRowChanged(this, new SalesInvoiceEcommerceDetailRowChangeEvent(((SalesInvoiceEcommerceDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesInvoiceEcommerceDetailRowChanging != null)) {
                    this.SalesInvoiceEcommerceDetailRowChanging(this, new SalesInvoiceEcommerceDetailRowChangeEvent(((SalesInvoiceEcommerceDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesInvoiceEcommerceDetailRowDeleted != null)) {
                    this.SalesInvoiceEcommerceDetailRowDeleted(this, new SalesInvoiceEcommerceDetailRowChangeEvent(((SalesInvoiceEcommerceDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesInvoiceEcommerceDetailRowDeleting != null)) {
                    this.SalesInvoiceEcommerceDetailRowDeleting(this, new SalesInvoiceEcommerceDetailRowChangeEvent(((SalesInvoiceEcommerceDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesInvoiceEcommerceDetailRow(SalesInvoiceEcommerceDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSSalesInvoiceEcommerce ds = new DSSalesInvoiceEcommerce();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesInvoiceEcommerceDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesInvoiceEcommerceRow : global::System.Data.DataRow {
            
            private SalesInvoiceEcommerceDataTable tableSalesInvoiceEcommerce;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoiceEcommerceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesInvoiceEcommerce = ((SalesInvoiceEcommerceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EComOrderID {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerce.EComOrderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EComOrderID\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.EComOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LeadType {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerce.LeadTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadType\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.LeadTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.OrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderNo\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.OrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OrderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoiceEcommerce.OrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderDate\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.OrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Outlet {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.OutletColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outlet\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.OutletColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Amount {
                get {
                    try {
                        return ((double)(this[this.tableSalesInvoiceEcommerce.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DeliveryCharge {
                get {
                    try {
                        return ((double)(this[this.tableSalesInvoiceEcommerce.DeliveryChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryCharge\' in table \'SalesInvoiceEcommerce\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.DeliveryChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Discount {
                get {
                    try {
                        return ((double)(this[this.tableSalesInvoiceEcommerce.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CopunNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.CopunNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CopunNo\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.CopunNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConsumerID {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerce.ConsumerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsumerID\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.ConsumerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConsumerName {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.ConsumerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsumerName\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.ConsumerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Addrress {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.AddrressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Addrress\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.AddrressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveryAddress {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.DeliveryAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryAddress\' in table \'SalesInvoiceEcommerce\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.DeliveryAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.ContactNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactNo\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.ContactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Status {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerce.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PaymentType {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerce.PaymentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentType\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.PaymentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesPersonID {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerce.SalesPersonIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesPersonID\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.SalesPersonIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BankID {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerce.BankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankID\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CardTypeID {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerce.CardTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardTypeID\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.CardTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CardType {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.CardTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardType\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.CardTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsEMI {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerce.IsEMIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsEMI\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.IsEMIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NoOfInstallment {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerce.NoOfInstallmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoOfInstallment\' in table \'SalesInvoiceEcommerce\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.NoOfInstallmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstrumentNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.InstrumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstrumentNo\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.InstrumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InstrumentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoiceEcommerce.InstrumentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstrumentDate\' in table \'SalesInvoiceEcommerce\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.InstrumentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CardCategoryID {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerce.CardCategoryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardCategoryID\' in table \'SalesInvoiceEcommerce\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.CardCategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CardCategory {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.CardCategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardCategory\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.CardCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApprovalNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.ApprovalNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovalNo\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.ApprovalNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RefInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerce.RefInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefInvoiceNo\' in table \'SalesInvoiceEcommerce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerce.RefInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEComOrderIDNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.EComOrderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEComOrderIDNull() {
                this[this.tableSalesInvoiceEcommerce.EComOrderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadTypeNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.LeadTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadTypeNull() {
                this[this.tableSalesInvoiceEcommerce.LeadTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderNoNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.OrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderNoNull() {
                this[this.tableSalesInvoiceEcommerce.OrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderDateNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.OrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderDateNull() {
                this[this.tableSalesInvoiceEcommerce.OrderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.OutletColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletNull() {
                this[this.tableSalesInvoiceEcommerce.OutletColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableSalesInvoiceEcommerce.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryChargeNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.DeliveryChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryChargeNull() {
                this[this.tableSalesInvoiceEcommerce.DeliveryChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableSalesInvoiceEcommerce.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCopunNoNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.CopunNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCopunNoNull() {
                this[this.tableSalesInvoiceEcommerce.CopunNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsumerIDNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.ConsumerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsumerIDNull() {
                this[this.tableSalesInvoiceEcommerce.ConsumerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsumerNameNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.ConsumerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsumerNameNull() {
                this[this.tableSalesInvoiceEcommerce.ConsumerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddrressNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.AddrressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddrressNull() {
                this[this.tableSalesInvoiceEcommerce.AddrressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryAddressNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.DeliveryAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryAddressNull() {
                this[this.tableSalesInvoiceEcommerce.DeliveryAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNoNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.ContactNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNoNull() {
                this[this.tableSalesInvoiceEcommerce.ContactNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableSalesInvoiceEcommerce.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableSalesInvoiceEcommerce.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableSalesInvoiceEcommerce.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentTypeNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.PaymentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentTypeNull() {
                this[this.tableSalesInvoiceEcommerce.PaymentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesPersonIDNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.SalesPersonIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesPersonIDNull() {
                this[this.tableSalesInvoiceEcommerce.SalesPersonIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankIDNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.BankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankIDNull() {
                this[this.tableSalesInvoiceEcommerce.BankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankNameNull() {
                this[this.tableSalesInvoiceEcommerce.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCardTypeIDNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.CardTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCardTypeIDNull() {
                this[this.tableSalesInvoiceEcommerce.CardTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCardTypeNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.CardTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCardTypeNull() {
                this[this.tableSalesInvoiceEcommerce.CardTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsEMINull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.IsEMIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsEMINull() {
                this[this.tableSalesInvoiceEcommerce.IsEMIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoOfInstallmentNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.NoOfInstallmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoOfInstallmentNull() {
                this[this.tableSalesInvoiceEcommerce.NoOfInstallmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstrumentNoNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.InstrumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstrumentNoNull() {
                this[this.tableSalesInvoiceEcommerce.InstrumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstrumentDateNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.InstrumentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstrumentDateNull() {
                this[this.tableSalesInvoiceEcommerce.InstrumentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCardCategoryIDNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.CardCategoryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCardCategoryIDNull() {
                this[this.tableSalesInvoiceEcommerce.CardCategoryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCardCategoryNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.CardCategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCardCategoryNull() {
                this[this.tableSalesInvoiceEcommerce.CardCategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovalNoNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.ApprovalNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovalNoNull() {
                this[this.tableSalesInvoiceEcommerce.ApprovalNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefInvoiceNoNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerce.RefInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefInvoiceNoNull() {
                this[this.tableSalesInvoiceEcommerce.RefInvoiceNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesInvoiceEcommerceDetailRow : global::System.Data.DataRow {
            
            private SalesInvoiceEcommerceDetailDataTable tableSalesInvoiceEcommerceDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoiceEcommerceDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesInvoiceEcommerceDetail = ((SalesInvoiceEcommerceDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EcomOrderID {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerceDetail.EcomOrderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EcomOrderID\' in table \'SalesInvoiceEcommerceDetail\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerceDetail.EcomOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerceDetail.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'SalesInvoiceEcommerceDetail\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerceDetail.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoiceEcommerceDetail.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'SalesInvoiceEcommerceDetail\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerceDetail.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableSalesInvoiceEcommerceDetail.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'SalesInvoiceEcommerceDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerceDetail.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DiscountAmount {
                get {
                    try {
                        return ((double)(this[this.tableSalesInvoiceEcommerceDetail.DiscountAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountAmount\' in table \'SalesInvoiceEcommerceDetail\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerceDetail.DiscountAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerceDetail.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'SalesInvoiceEcommerceDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerceDetail.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsFreeQty {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoiceEcommerceDetail.IsFreeQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsFreeQty\' in table \'SalesInvoiceEcommerceDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSalesInvoiceEcommerceDetail.IsFreeQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEcomOrderIDNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerceDetail.EcomOrderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEcomOrderIDNull() {
                this[this.tableSalesInvoiceEcommerceDetail.EcomOrderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerceDetail.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tableSalesInvoiceEcommerceDetail.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerceDetail.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableSalesInvoiceEcommerceDetail.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerceDetail.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tableSalesInvoiceEcommerceDetail.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountAmountNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerceDetail.DiscountAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountAmountNull() {
                this[this.tableSalesInvoiceEcommerceDetail.DiscountAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerceDetail.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableSalesInvoiceEcommerceDetail.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsFreeQtyNull() {
                return this.IsNull(this.tableSalesInvoiceEcommerceDetail.IsFreeQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsFreeQtyNull() {
                this[this.tableSalesInvoiceEcommerceDetail.IsFreeQtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesInvoiceEcommerceRowChangeEvent : global::System.EventArgs {
            
            private SalesInvoiceEcommerceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceEcommerceRowChangeEvent(SalesInvoiceEcommerceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceEcommerceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesInvoiceEcommerceDetailRowChangeEvent : global::System.EventArgs {
            
            private SalesInvoiceEcommerceDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceEcommerceDetailRowChangeEvent(SalesInvoiceEcommerceDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceEcommerceDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591