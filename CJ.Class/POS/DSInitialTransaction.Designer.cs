//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CJ.Class.POS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSInitialTransaction")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSInitialTransaction : global::System.Data.DataSet {
        
        private ProductStockTranDataTable tableProductStockTran;
        
        private ProductStockSerialDataTable tableProductStockSerial;
        
        private ProductStockDataTable tableProductStock;
        
        private ProductStockTranItemDataTable tableProductStockTranItem;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSInitialTransaction() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSInitialTransaction(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ProductStockTran"] != null)) {
                    base.Tables.Add(new ProductStockTranDataTable(ds.Tables["ProductStockTran"]));
                }
                if ((ds.Tables["ProductStockSerial"] != null)) {
                    base.Tables.Add(new ProductStockSerialDataTable(ds.Tables["ProductStockSerial"]));
                }
                if ((ds.Tables["ProductStock"] != null)) {
                    base.Tables.Add(new ProductStockDataTable(ds.Tables["ProductStock"]));
                }
                if ((ds.Tables["ProductStockTranItem"] != null)) {
                    base.Tables.Add(new ProductStockTranItemDataTable(ds.Tables["ProductStockTranItem"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductStockTranDataTable ProductStockTran {
            get {
                return this.tableProductStockTran;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductStockSerialDataTable ProductStockSerial {
            get {
                return this.tableProductStockSerial;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductStockDataTable ProductStock {
            get {
                return this.tableProductStock;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductStockTranItemDataTable ProductStockTranItem {
            get {
                return this.tableProductStockTranItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSInitialTransaction cln = ((DSInitialTransaction)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ProductStockTran"] != null)) {
                    base.Tables.Add(new ProductStockTranDataTable(ds.Tables["ProductStockTran"]));
                }
                if ((ds.Tables["ProductStockSerial"] != null)) {
                    base.Tables.Add(new ProductStockSerialDataTable(ds.Tables["ProductStockSerial"]));
                }
                if ((ds.Tables["ProductStock"] != null)) {
                    base.Tables.Add(new ProductStockDataTable(ds.Tables["ProductStock"]));
                }
                if ((ds.Tables["ProductStockTranItem"] != null)) {
                    base.Tables.Add(new ProductStockTranItemDataTable(ds.Tables["ProductStockTranItem"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableProductStockTran = ((ProductStockTranDataTable)(base.Tables["ProductStockTran"]));
            if ((initTable == true)) {
                if ((this.tableProductStockTran != null)) {
                    this.tableProductStockTran.InitVars();
                }
            }
            this.tableProductStockSerial = ((ProductStockSerialDataTable)(base.Tables["ProductStockSerial"]));
            if ((initTable == true)) {
                if ((this.tableProductStockSerial != null)) {
                    this.tableProductStockSerial.InitVars();
                }
            }
            this.tableProductStock = ((ProductStockDataTable)(base.Tables["ProductStock"]));
            if ((initTable == true)) {
                if ((this.tableProductStock != null)) {
                    this.tableProductStock.InitVars();
                }
            }
            this.tableProductStockTranItem = ((ProductStockTranItemDataTable)(base.Tables["ProductStockTranItem"]));
            if ((initTable == true)) {
                if ((this.tableProductStockTranItem != null)) {
                    this.tableProductStockTranItem.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSInitialTransaction";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSInitialTransaction.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProductStockTran = new ProductStockTranDataTable();
            base.Tables.Add(this.tableProductStockTran);
            this.tableProductStockSerial = new ProductStockSerialDataTable();
            base.Tables.Add(this.tableProductStockSerial);
            this.tableProductStock = new ProductStockDataTable();
            base.Tables.Add(this.tableProductStock);
            this.tableProductStockTranItem = new ProductStockTranItemDataTable();
            base.Tables.Add(this.tableProductStockTranItem);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProductStockTran() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProductStockSerial() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProductStock() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProductStockTranItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSInitialTransaction ds = new DSInitialTransaction();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ProductStockTranRowChangeEventHandler(object sender, ProductStockTranRowChangeEvent e);
        
        public delegate void ProductStockSerialRowChangeEventHandler(object sender, ProductStockSerialRowChangeEvent e);
        
        public delegate void ProductStockRowChangeEventHandler(object sender, ProductStockRowChangeEvent e);
        
        public delegate void ProductStockTranItemRowChangeEventHandler(object sender, ProductStockTranItemRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductStockTranDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTranID;
            
            private global::System.Data.DataColumn columnLastUpdateUserID;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            private global::System.Data.DataColumn columnLastUpdateDate;
            
            private global::System.Data.DataColumn columnPOID;
            
            private global::System.Data.DataColumn columnTranNo;
            
            private global::System.Data.DataColumn columnTranDate;
            
            private global::System.Data.DataColumn columnTranTypeID;
            
            private global::System.Data.DataColumn columnFromWHID;
            
            private global::System.Data.DataColumn columnToWHID;
            
            private global::System.Data.DataColumn columnToChannelID;
            
            private global::System.Data.DataColumn columnFromChannelID;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnIsDownload;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockTranDataTable() {
                this.TableName = "ProductStockTran";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductStockTranDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProductStockTranDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TranIDColumn {
                get {
                    return this.columnTranID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastUpdateUserIDColumn {
                get {
                    return this.columnLastUpdateUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastUpdateDateColumn {
                get {
                    return this.columnLastUpdateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TranNoColumn {
                get {
                    return this.columnTranNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TranDateColumn {
                get {
                    return this.columnTranDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TranTypeIDColumn {
                get {
                    return this.columnTranTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromWHIDColumn {
                get {
                    return this.columnFromWHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToWHIDColumn {
                get {
                    return this.columnToWHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToChannelIDColumn {
                get {
                    return this.columnToChannelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromChannelIDColumn {
                get {
                    return this.columnFromChannelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDownloadColumn {
                get {
                    return this.columnIsDownload;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockTranRow this[int index] {
                get {
                    return ((ProductStockTranRow)(this.Rows[index]));
                }
            }
            
            public event ProductStockTranRowChangeEventHandler ProductStockTranRowChanging;
            
            public event ProductStockTranRowChangeEventHandler ProductStockTranRowChanged;
            
            public event ProductStockTranRowChangeEventHandler ProductStockTranRowDeleting;
            
            public event ProductStockTranRowChangeEventHandler ProductStockTranRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProductStockTranRow(ProductStockTranRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockTranRow AddProductStockTranRow(
                        long TranID, 
                        int LastUpdateUserID, 
                        System.DateTime CreateDate, 
                        System.DateTime LastUpdateDate, 
                        long POID, 
                        string TranNo, 
                        System.DateTime TranDate, 
                        int TranTypeID, 
                        long FromWHID, 
                        long ToWHID, 
                        long ToChannelID, 
                        long FromChannelID, 
                        long UserID, 
                        short Status, 
                        string Remarks, 
                        int IsDownload) {
                ProductStockTranRow rowProductStockTranRow = ((ProductStockTranRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TranID,
                        LastUpdateUserID,
                        CreateDate,
                        LastUpdateDate,
                        POID,
                        TranNo,
                        TranDate,
                        TranTypeID,
                        FromWHID,
                        ToWHID,
                        ToChannelID,
                        FromChannelID,
                        UserID,
                        Status,
                        Remarks,
                        IsDownload};
                rowProductStockTranRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductStockTranRow);
                return rowProductStockTranRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProductStockTranDataTable cln = ((ProductStockTranDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductStockTranDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTranID = base.Columns["TranID"];
                this.columnLastUpdateUserID = base.Columns["LastUpdateUserID"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnLastUpdateDate = base.Columns["LastUpdateDate"];
                this.columnPOID = base.Columns["POID"];
                this.columnTranNo = base.Columns["TranNo"];
                this.columnTranDate = base.Columns["TranDate"];
                this.columnTranTypeID = base.Columns["TranTypeID"];
                this.columnFromWHID = base.Columns["FromWHID"];
                this.columnToWHID = base.Columns["ToWHID"];
                this.columnToChannelID = base.Columns["ToChannelID"];
                this.columnFromChannelID = base.Columns["FromChannelID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnStatus = base.Columns["Status"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnIsDownload = base.Columns["IsDownload"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTranID = new global::System.Data.DataColumn("TranID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTranID);
                this.columnLastUpdateUserID = new global::System.Data.DataColumn("LastUpdateUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdateUserID);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnLastUpdateDate = new global::System.Data.DataColumn("LastUpdateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdateDate);
                this.columnPOID = new global::System.Data.DataColumn("POID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.columnTranNo = new global::System.Data.DataColumn("TranNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTranNo);
                this.columnTranDate = new global::System.Data.DataColumn("TranDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTranDate);
                this.columnTranTypeID = new global::System.Data.DataColumn("TranTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTranTypeID);
                this.columnFromWHID = new global::System.Data.DataColumn("FromWHID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromWHID);
                this.columnToWHID = new global::System.Data.DataColumn("ToWHID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToWHID);
                this.columnToChannelID = new global::System.Data.DataColumn("ToChannelID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToChannelID);
                this.columnFromChannelID = new global::System.Data.DataColumn("FromChannelID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromChannelID);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnIsDownload = new global::System.Data.DataColumn("IsDownload", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDownload);
                this.columnPOID.Caption = "POId";
                this.columnTranTypeID.Caption = "TranTypeId";
                this.columnToWHID.Caption = "ToWHId";
                this.columnFromChannelID.Caption = "FromChannelId";
                this.columnUserID.Caption = "UserId";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockTranRow NewProductStockTranRow() {
                return ((ProductStockTranRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductStockTranRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProductStockTranRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductStockTranRowChanged != null)) {
                    this.ProductStockTranRowChanged(this, new ProductStockTranRowChangeEvent(((ProductStockTranRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductStockTranRowChanging != null)) {
                    this.ProductStockTranRowChanging(this, new ProductStockTranRowChangeEvent(((ProductStockTranRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductStockTranRowDeleted != null)) {
                    this.ProductStockTranRowDeleted(this, new ProductStockTranRowChangeEvent(((ProductStockTranRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductStockTranRowDeleting != null)) {
                    this.ProductStockTranRowDeleting(this, new ProductStockTranRowChangeEvent(((ProductStockTranRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProductStockTranRow(ProductStockTranRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSInitialTransaction ds = new DSInitialTransaction();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductStockTranDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductStockSerialDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnProductSerialNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockSerialDataTable() {
                this.TableName = "ProductStockSerial";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductStockSerialDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProductStockSerialDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductSerialNoColumn {
                get {
                    return this.columnProductSerialNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockSerialRow this[int index] {
                get {
                    return ((ProductStockSerialRow)(this.Rows[index]));
                }
            }
            
            public event ProductStockSerialRowChangeEventHandler ProductStockSerialRowChanging;
            
            public event ProductStockSerialRowChangeEventHandler ProductStockSerialRowChanged;
            
            public event ProductStockSerialRowChangeEventHandler ProductStockSerialRowDeleting;
            
            public event ProductStockSerialRowChangeEventHandler ProductStockSerialRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProductStockSerialRow(ProductStockSerialRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockSerialRow AddProductStockSerialRow(int ProductID, string ProductSerialNo) {
                ProductStockSerialRow rowProductStockSerialRow = ((ProductStockSerialRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProductID,
                        ProductSerialNo};
                rowProductStockSerialRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductStockSerialRow);
                return rowProductStockSerialRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProductStockSerialDataTable cln = ((ProductStockSerialDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductStockSerialDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProductID = base.Columns["ProductID"];
                this.columnProductSerialNo = base.Columns["ProductSerialNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnProductSerialNo = new global::System.Data.DataColumn("ProductSerialNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductSerialNo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockSerialRow NewProductStockSerialRow() {
                return ((ProductStockSerialRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductStockSerialRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProductStockSerialRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductStockSerialRowChanged != null)) {
                    this.ProductStockSerialRowChanged(this, new ProductStockSerialRowChangeEvent(((ProductStockSerialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductStockSerialRowChanging != null)) {
                    this.ProductStockSerialRowChanging(this, new ProductStockSerialRowChangeEvent(((ProductStockSerialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductStockSerialRowDeleted != null)) {
                    this.ProductStockSerialRowDeleted(this, new ProductStockSerialRowChangeEvent(((ProductStockSerialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductStockSerialRowDeleting != null)) {
                    this.ProductStockSerialRowDeleting(this, new ProductStockSerialRowChangeEvent(((ProductStockSerialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProductStockSerialRow(ProductStockSerialRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSInitialTransaction ds = new DSInitialTransaction();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductStockSerialDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductStockDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnWarehouseID;
            
            private global::System.Data.DataColumn columnCurrentStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockDataTable() {
                this.TableName = "ProductStock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductStockDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProductStockDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseIDColumn {
                get {
                    return this.columnWarehouseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentStockColumn {
                get {
                    return this.columnCurrentStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockRow this[int index] {
                get {
                    return ((ProductStockRow)(this.Rows[index]));
                }
            }
            
            public event ProductStockRowChangeEventHandler ProductStockRowChanging;
            
            public event ProductStockRowChangeEventHandler ProductStockRowChanged;
            
            public event ProductStockRowChangeEventHandler ProductStockRowDeleting;
            
            public event ProductStockRowChangeEventHandler ProductStockRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProductStockRow(ProductStockRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockRow AddProductStockRow(int ProductID, int WarehouseID, int CurrentStock) {
                ProductStockRow rowProductStockRow = ((ProductStockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProductID,
                        WarehouseID,
                        CurrentStock};
                rowProductStockRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductStockRow);
                return rowProductStockRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProductStockDataTable cln = ((ProductStockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductStockDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProductID = base.Columns["ProductID"];
                this.columnWarehouseID = base.Columns["WarehouseID"];
                this.columnCurrentStock = base.Columns["CurrentStock"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnWarehouseID = new global::System.Data.DataColumn("WarehouseID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseID);
                this.columnCurrentStock = new global::System.Data.DataColumn("CurrentStock", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentStock);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockRow NewProductStockRow() {
                return ((ProductStockRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductStockRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProductStockRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductStockRowChanged != null)) {
                    this.ProductStockRowChanged(this, new ProductStockRowChangeEvent(((ProductStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductStockRowChanging != null)) {
                    this.ProductStockRowChanging(this, new ProductStockRowChangeEvent(((ProductStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductStockRowDeleted != null)) {
                    this.ProductStockRowDeleted(this, new ProductStockRowChangeEvent(((ProductStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductStockRowDeleting != null)) {
                    this.ProductStockRowDeleting(this, new ProductStockRowChangeEvent(((ProductStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProductStockRow(ProductStockRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSInitialTransaction ds = new DSInitialTransaction();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductStockDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductStockTranItemDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTranID;
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnStockPrice;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnRefTranID;
            
            private global::System.Data.DataColumn columnLCProductQty;
            
            private global::System.Data.DataColumn columnLCShortQty;
            
            private global::System.Data.DataColumn columnLCDamagedQty;
            
            private global::System.Data.DataColumn columnLCMinorDefectiveQty;
            
            private global::System.Data.DataColumn columnLCRemarks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockTranItemDataTable() {
                this.TableName = "ProductStockTranItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductStockTranItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProductStockTranItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TranIDColumn {
                get {
                    return this.columnTranID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockPriceColumn {
                get {
                    return this.columnStockPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefTranIDColumn {
                get {
                    return this.columnRefTranID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCProductQtyColumn {
                get {
                    return this.columnLCProductQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCShortQtyColumn {
                get {
                    return this.columnLCShortQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCDamagedQtyColumn {
                get {
                    return this.columnLCDamagedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCMinorDefectiveQtyColumn {
                get {
                    return this.columnLCMinorDefectiveQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCRemarksColumn {
                get {
                    return this.columnLCRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockTranItemRow this[int index] {
                get {
                    return ((ProductStockTranItemRow)(this.Rows[index]));
                }
            }
            
            public event ProductStockTranItemRowChangeEventHandler ProductStockTranItemRowChanging;
            
            public event ProductStockTranItemRowChangeEventHandler ProductStockTranItemRowChanged;
            
            public event ProductStockTranItemRowChangeEventHandler ProductStockTranItemRowDeleting;
            
            public event ProductStockTranItemRowChangeEventHandler ProductStockTranItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProductStockTranItemRow(ProductStockTranItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockTranItemRow AddProductStockTranItemRow(long TranID, long ProductID, long Qty, double StockPrice, short Status, int RefTranID, int LCProductQty, int LCShortQty, int LCDamagedQty, int LCMinorDefectiveQty, string LCRemarks) {
                ProductStockTranItemRow rowProductStockTranItemRow = ((ProductStockTranItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TranID,
                        ProductID,
                        Qty,
                        StockPrice,
                        Status,
                        RefTranID,
                        LCProductQty,
                        LCShortQty,
                        LCDamagedQty,
                        LCMinorDefectiveQty,
                        LCRemarks};
                rowProductStockTranItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductStockTranItemRow);
                return rowProductStockTranItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProductStockTranItemDataTable cln = ((ProductStockTranItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductStockTranItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTranID = base.Columns["TranID"];
                this.columnProductID = base.Columns["ProductID"];
                this.columnQty = base.Columns["Qty"];
                this.columnStockPrice = base.Columns["StockPrice"];
                this.columnStatus = base.Columns["Status"];
                this.columnRefTranID = base.Columns["RefTranID"];
                this.columnLCProductQty = base.Columns["LCProductQty"];
                this.columnLCShortQty = base.Columns["LCShortQty"];
                this.columnLCDamagedQty = base.Columns["LCDamagedQty"];
                this.columnLCMinorDefectiveQty = base.Columns["LCMinorDefectiveQty"];
                this.columnLCRemarks = base.Columns["LCRemarks"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTranID = new global::System.Data.DataColumn("TranID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTranID);
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnStockPrice = new global::System.Data.DataColumn("StockPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockPrice);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnRefTranID = new global::System.Data.DataColumn("RefTranID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefTranID);
                this.columnLCProductQty = new global::System.Data.DataColumn("LCProductQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCProductQty);
                this.columnLCShortQty = new global::System.Data.DataColumn("LCShortQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCShortQty);
                this.columnLCDamagedQty = new global::System.Data.DataColumn("LCDamagedQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCDamagedQty);
                this.columnLCMinorDefectiveQty = new global::System.Data.DataColumn("LCMinorDefectiveQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCMinorDefectiveQty);
                this.columnLCRemarks = new global::System.Data.DataColumn("LCRemarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCRemarks);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockTranItemRow NewProductStockTranItemRow() {
                return ((ProductStockTranItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductStockTranItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProductStockTranItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductStockTranItemRowChanged != null)) {
                    this.ProductStockTranItemRowChanged(this, new ProductStockTranItemRowChangeEvent(((ProductStockTranItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductStockTranItemRowChanging != null)) {
                    this.ProductStockTranItemRowChanging(this, new ProductStockTranItemRowChangeEvent(((ProductStockTranItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductStockTranItemRowDeleted != null)) {
                    this.ProductStockTranItemRowDeleted(this, new ProductStockTranItemRowChangeEvent(((ProductStockTranItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductStockTranItemRowDeleting != null)) {
                    this.ProductStockTranItemRowDeleting(this, new ProductStockTranItemRowChangeEvent(((ProductStockTranItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProductStockTranItemRow(ProductStockTranItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSInitialTransaction ds = new DSInitialTransaction();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductStockTranItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProductStockTranRow : global::System.Data.DataRow {
            
            private ProductStockTranDataTable tableProductStockTran;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductStockTranRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductStockTran = ((ProductStockTranDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TranID {
                get {
                    try {
                        return ((long)(this[this.tableProductStockTran.TranIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TranID\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.TranIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LastUpdateUserID {
                get {
                    try {
                        return ((int)(this[this.tableProductStockTran.LastUpdateUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdateUserID\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.LastUpdateUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProductStockTran.CreateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateDate\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastUpdateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProductStockTran.LastUpdateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdateDate\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.LastUpdateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long POID {
                get {
                    try {
                        return ((long)(this[this.tableProductStockTran.POIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POID\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.POIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TranNo {
                get {
                    try {
                        return ((string)(this[this.tableProductStockTran.TranNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TranNo\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.TranNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TranDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProductStockTran.TranDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TranDate\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.TranDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TranTypeID {
                get {
                    try {
                        return ((int)(this[this.tableProductStockTran.TranTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TranTypeID\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.TranTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FromWHID {
                get {
                    try {
                        return ((long)(this[this.tableProductStockTran.FromWHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromWHID\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.FromWHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ToWHID {
                get {
                    try {
                        return ((long)(this[this.tableProductStockTran.ToWHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToWHID\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.ToWHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ToChannelID {
                get {
                    try {
                        return ((long)(this[this.tableProductStockTran.ToChannelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToChannelID\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.ToChannelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FromChannelID {
                get {
                    try {
                        return ((long)(this[this.tableProductStockTran.FromChannelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromChannelID\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.FromChannelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long UserID {
                get {
                    try {
                        return ((long)(this[this.tableProductStockTran.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Status {
                get {
                    try {
                        return ((short)(this[this.tableProductStockTran.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableProductStockTran.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsDownload {
                get {
                    try {
                        return ((int)(this[this.tableProductStockTran.IsDownloadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDownload\' in table \'ProductStockTran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTran.IsDownloadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTranIDNull() {
                return this.IsNull(this.tableProductStockTran.TranIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTranIDNull() {
                this[this.tableProductStockTran.TranIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdateUserIDNull() {
                return this.IsNull(this.tableProductStockTran.LastUpdateUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdateUserIDNull() {
                this[this.tableProductStockTran.LastUpdateUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreateDateNull() {
                return this.IsNull(this.tableProductStockTran.CreateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreateDateNull() {
                this[this.tableProductStockTran.CreateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdateDateNull() {
                return this.IsNull(this.tableProductStockTran.LastUpdateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdateDateNull() {
                this[this.tableProductStockTran.LastUpdateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOIDNull() {
                return this.IsNull(this.tableProductStockTran.POIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOIDNull() {
                this[this.tableProductStockTran.POIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTranNoNull() {
                return this.IsNull(this.tableProductStockTran.TranNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTranNoNull() {
                this[this.tableProductStockTran.TranNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTranDateNull() {
                return this.IsNull(this.tableProductStockTran.TranDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTranDateNull() {
                this[this.tableProductStockTran.TranDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTranTypeIDNull() {
                return this.IsNull(this.tableProductStockTran.TranTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTranTypeIDNull() {
                this[this.tableProductStockTran.TranTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromWHIDNull() {
                return this.IsNull(this.tableProductStockTran.FromWHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromWHIDNull() {
                this[this.tableProductStockTran.FromWHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToWHIDNull() {
                return this.IsNull(this.tableProductStockTran.ToWHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToWHIDNull() {
                this[this.tableProductStockTran.ToWHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToChannelIDNull() {
                return this.IsNull(this.tableProductStockTran.ToChannelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToChannelIDNull() {
                this[this.tableProductStockTran.ToChannelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromChannelIDNull() {
                return this.IsNull(this.tableProductStockTran.FromChannelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromChannelIDNull() {
                this[this.tableProductStockTran.FromChannelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableProductStockTran.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableProductStockTran.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableProductStockTran.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableProductStockTran.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableProductStockTran.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableProductStockTran.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDownloadNull() {
                return this.IsNull(this.tableProductStockTran.IsDownloadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDownloadNull() {
                this[this.tableProductStockTran.IsDownloadColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProductStockSerialRow : global::System.Data.DataRow {
            
            private ProductStockSerialDataTable tableProductStockSerial;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductStockSerialRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductStockSerial = ((ProductStockSerialDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProductID {
                get {
                    try {
                        return ((int)(this[this.tableProductStockSerial.ProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductID\' in table \'ProductStockSerial\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockSerial.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductSerialNo {
                get {
                    try {
                        return ((string)(this[this.tableProductStockSerial.ProductSerialNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductSerialNo\' in table \'ProductStockSerial\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockSerial.ProductSerialNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductIDNull() {
                return this.IsNull(this.tableProductStockSerial.ProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductIDNull() {
                this[this.tableProductStockSerial.ProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductSerialNoNull() {
                return this.IsNull(this.tableProductStockSerial.ProductSerialNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductSerialNoNull() {
                this[this.tableProductStockSerial.ProductSerialNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProductStockRow : global::System.Data.DataRow {
            
            private ProductStockDataTable tableProductStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductStockRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductStock = ((ProductStockDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProductID {
                get {
                    try {
                        return ((int)(this[this.tableProductStock.ProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductID\' in table \'ProductStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStock.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WarehouseID {
                get {
                    try {
                        return ((int)(this[this.tableProductStock.WarehouseIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WarehouseID\' in table \'ProductStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStock.WarehouseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CurrentStock {
                get {
                    try {
                        return ((int)(this[this.tableProductStock.CurrentStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentStock\' in table \'ProductStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStock.CurrentStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductIDNull() {
                return this.IsNull(this.tableProductStock.ProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductIDNull() {
                this[this.tableProductStock.ProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseIDNull() {
                return this.IsNull(this.tableProductStock.WarehouseIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseIDNull() {
                this[this.tableProductStock.WarehouseIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentStockNull() {
                return this.IsNull(this.tableProductStock.CurrentStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentStockNull() {
                this[this.tableProductStock.CurrentStockColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProductStockTranItemRow : global::System.Data.DataRow {
            
            private ProductStockTranItemDataTable tableProductStockTranItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductStockTranItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductStockTranItem = ((ProductStockTranItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TranID {
                get {
                    try {
                        return ((long)(this[this.tableProductStockTranItem.TranIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TranID\' in table \'ProductStockTranItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTranItem.TranIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ProductID {
                get {
                    try {
                        return ((long)(this[this.tableProductStockTranItem.ProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductID\' in table \'ProductStockTranItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTranItem.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Qty {
                get {
                    try {
                        return ((long)(this[this.tableProductStockTranItem.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'ProductStockTranItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTranItem.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockPrice {
                get {
                    try {
                        return ((double)(this[this.tableProductStockTranItem.StockPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockPrice\' in table \'ProductStockTranItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTranItem.StockPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Status {
                get {
                    try {
                        return ((short)(this[this.tableProductStockTranItem.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'ProductStockTranItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTranItem.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefTranID {
                get {
                    try {
                        return ((int)(this[this.tableProductStockTranItem.RefTranIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefTranID\' in table \'ProductStockTranItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTranItem.RefTranIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LCProductQty {
                get {
                    try {
                        return ((int)(this[this.tableProductStockTranItem.LCProductQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCProductQty\' in table \'ProductStockTranItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTranItem.LCProductQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LCShortQty {
                get {
                    try {
                        return ((int)(this[this.tableProductStockTranItem.LCShortQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCShortQty\' in table \'ProductStockTranItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTranItem.LCShortQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LCDamagedQty {
                get {
                    try {
                        return ((int)(this[this.tableProductStockTranItem.LCDamagedQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCDamagedQty\' in table \'ProductStockTranItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTranItem.LCDamagedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LCMinorDefectiveQty {
                get {
                    try {
                        return ((int)(this[this.tableProductStockTranItem.LCMinorDefectiveQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCMinorDefectiveQty\' in table \'ProductStockTranItem\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTranItem.LCMinorDefectiveQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LCRemarks {
                get {
                    try {
                        return ((string)(this[this.tableProductStockTranItem.LCRemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCRemarks\' in table \'ProductStockTranItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductStockTranItem.LCRemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTranIDNull() {
                return this.IsNull(this.tableProductStockTranItem.TranIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTranIDNull() {
                this[this.tableProductStockTranItem.TranIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductIDNull() {
                return this.IsNull(this.tableProductStockTranItem.ProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductIDNull() {
                this[this.tableProductStockTranItem.ProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableProductStockTranItem.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableProductStockTranItem.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockPriceNull() {
                return this.IsNull(this.tableProductStockTranItem.StockPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockPriceNull() {
                this[this.tableProductStockTranItem.StockPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableProductStockTranItem.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableProductStockTranItem.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefTranIDNull() {
                return this.IsNull(this.tableProductStockTranItem.RefTranIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefTranIDNull() {
                this[this.tableProductStockTranItem.RefTranIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLCProductQtyNull() {
                return this.IsNull(this.tableProductStockTranItem.LCProductQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLCProductQtyNull() {
                this[this.tableProductStockTranItem.LCProductQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLCShortQtyNull() {
                return this.IsNull(this.tableProductStockTranItem.LCShortQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLCShortQtyNull() {
                this[this.tableProductStockTranItem.LCShortQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLCDamagedQtyNull() {
                return this.IsNull(this.tableProductStockTranItem.LCDamagedQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLCDamagedQtyNull() {
                this[this.tableProductStockTranItem.LCDamagedQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLCMinorDefectiveQtyNull() {
                return this.IsNull(this.tableProductStockTranItem.LCMinorDefectiveQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLCMinorDefectiveQtyNull() {
                this[this.tableProductStockTranItem.LCMinorDefectiveQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLCRemarksNull() {
                return this.IsNull(this.tableProductStockTranItem.LCRemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLCRemarksNull() {
                this[this.tableProductStockTranItem.LCRemarksColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProductStockTranRowChangeEvent : global::System.EventArgs {
            
            private ProductStockTranRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockTranRowChangeEvent(ProductStockTranRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockTranRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProductStockSerialRowChangeEvent : global::System.EventArgs {
            
            private ProductStockSerialRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockSerialRowChangeEvent(ProductStockSerialRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockSerialRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProductStockRowChangeEvent : global::System.EventArgs {
            
            private ProductStockRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockRowChangeEvent(ProductStockRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProductStockTranItemRowChangeEvent : global::System.EventArgs {
            
            private ProductStockTranItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockTranItemRowChangeEvent(ProductStockTranItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductStockTranItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591