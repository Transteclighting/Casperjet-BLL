//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CJ.Class.POS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSExchangeOfferJob")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSExchangeOfferJob : global::System.Data.DataSet {
        
        private ExchangeOfferJobDataTable tableExchangeOfferJob;
        
        private ExchangeOfferJobDetailDataTable tableExchangeOfferJobDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSExchangeOfferJob() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSExchangeOfferJob(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ExchangeOfferJob"] != null)) {
                    base.Tables.Add(new ExchangeOfferJobDataTable(ds.Tables["ExchangeOfferJob"]));
                }
                if ((ds.Tables["ExchangeOfferJobDetail"] != null)) {
                    base.Tables.Add(new ExchangeOfferJobDetailDataTable(ds.Tables["ExchangeOfferJobDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExchangeOfferJobDataTable ExchangeOfferJob {
            get {
                return this.tableExchangeOfferJob;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExchangeOfferJobDetailDataTable ExchangeOfferJobDetail {
            get {
                return this.tableExchangeOfferJobDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSExchangeOfferJob cln = ((DSExchangeOfferJob)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ExchangeOfferJob"] != null)) {
                    base.Tables.Add(new ExchangeOfferJobDataTable(ds.Tables["ExchangeOfferJob"]));
                }
                if ((ds.Tables["ExchangeOfferJobDetail"] != null)) {
                    base.Tables.Add(new ExchangeOfferJobDetailDataTable(ds.Tables["ExchangeOfferJobDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableExchangeOfferJob = ((ExchangeOfferJobDataTable)(base.Tables["ExchangeOfferJob"]));
            if ((initTable == true)) {
                if ((this.tableExchangeOfferJob != null)) {
                    this.tableExchangeOfferJob.InitVars();
                }
            }
            this.tableExchangeOfferJobDetail = ((ExchangeOfferJobDetailDataTable)(base.Tables["ExchangeOfferJobDetail"]));
            if ((initTable == true)) {
                if ((this.tableExchangeOfferJobDetail != null)) {
                    this.tableExchangeOfferJobDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSExchangeOfferJob";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSExchangeOfferJob.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableExchangeOfferJob = new ExchangeOfferJobDataTable();
            base.Tables.Add(this.tableExchangeOfferJob);
            this.tableExchangeOfferJobDetail = new ExchangeOfferJobDetailDataTable();
            base.Tables.Add(this.tableExchangeOfferJobDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeExchangeOfferJob() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeExchangeOfferJobDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSExchangeOfferJob ds = new DSExchangeOfferJob();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ExchangeOfferJobRowChangeEventHandler(object sender, ExchangeOfferJobRowChangeEvent e);
        
        public delegate void ExchangeOfferJobDetailRowChangeEventHandler(object sender, ExchangeOfferJobDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExchangeOfferJobDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJobID;
            
            private global::System.Data.DataColumn columnJobNo;
            
            private global::System.Data.DataColumn columnContactMode;
            
            private global::System.Data.DataColumn columnContactDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnContactNo;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnAssignedVenderID;
            
            private global::System.Data.DataColumn columnParentCustomerID;
            
            private global::System.Data.DataColumn columnAssignDate;
            
            private global::System.Data.DataColumn columnExpectedVisitDate;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnRefInvoiceNo;
            
            private global::System.Data.DataColumn columnSalesExecuteDate;
            
            private global::System.Data.DataColumn columnCancelNote;
            
            private global::System.Data.DataColumn columnCancelDate;
            
            private global::System.Data.DataColumn columnCreateUserID;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            private global::System.Data.DataColumn columnUpdateUserID;
            
            private global::System.Data.DataColumn columnUpdateDate;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnTerminal;
            
            private global::System.Data.DataColumn columnHappyCallStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferJobDataTable() {
                this.TableName = "ExchangeOfferJob";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExchangeOfferJobDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ExchangeOfferJobDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobIDColumn {
                get {
                    return this.columnJobID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobNoColumn {
                get {
                    return this.columnJobNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactModeColumn {
                get {
                    return this.columnContactMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactDateColumn {
                get {
                    return this.columnContactDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNoColumn {
                get {
                    return this.columnContactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignedVenderIDColumn {
                get {
                    return this.columnAssignedVenderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentCustomerIDColumn {
                get {
                    return this.columnParentCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignDateColumn {
                get {
                    return this.columnAssignDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpectedVisitDateColumn {
                get {
                    return this.columnExpectedVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefInvoiceNoColumn {
                get {
                    return this.columnRefInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesExecuteDateColumn {
                get {
                    return this.columnSalesExecuteDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CancelNoteColumn {
                get {
                    return this.columnCancelNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CancelDateColumn {
                get {
                    return this.columnCancelDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateUserIDColumn {
                get {
                    return this.columnCreateUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateUserIDColumn {
                get {
                    return this.columnUpdateUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateColumn {
                get {
                    return this.columnUpdateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TerminalColumn {
                get {
                    return this.columnTerminal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HappyCallStatusColumn {
                get {
                    return this.columnHappyCallStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferJobRow this[int index] {
                get {
                    return ((ExchangeOfferJobRow)(this.Rows[index]));
                }
            }
            
            public event ExchangeOfferJobRowChangeEventHandler ExchangeOfferJobRowChanging;
            
            public event ExchangeOfferJobRowChangeEventHandler ExchangeOfferJobRowChanged;
            
            public event ExchangeOfferJobRowChangeEventHandler ExchangeOfferJobRowDeleting;
            
            public event ExchangeOfferJobRowChangeEventHandler ExchangeOfferJobRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddExchangeOfferJobRow(ExchangeOfferJobRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferJobRow AddExchangeOfferJobRow(
                        int JobID, 
                        string JobNo, 
                        int ContactMode, 
                        System.DateTime ContactDate, 
                        string CustomerName, 
                        string Address, 
                        string ContactNo, 
                        string Email, 
                        int AssignedVenderID, 
                        int ParentCustomerID, 
                        System.DateTime AssignDate, 
                        System.DateTime ExpectedVisitDate, 
                        string Remarks, 
                        string RefInvoiceNo, 
                        System.DateTime SalesExecuteDate, 
                        string CancelNote, 
                        System.DateTime CancelDate, 
                        int CreateUserID, 
                        System.DateTime CreateDate, 
                        int UpdateUserID, 
                        System.DateTime UpdateDate, 
                        int Status, 
                        int Terminal, 
                        int HappyCallStatus) {
                ExchangeOfferJobRow rowExchangeOfferJobRow = ((ExchangeOfferJobRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JobID,
                        JobNo,
                        ContactMode,
                        ContactDate,
                        CustomerName,
                        Address,
                        ContactNo,
                        Email,
                        AssignedVenderID,
                        ParentCustomerID,
                        AssignDate,
                        ExpectedVisitDate,
                        Remarks,
                        RefInvoiceNo,
                        SalesExecuteDate,
                        CancelNote,
                        CancelDate,
                        CreateUserID,
                        CreateDate,
                        UpdateUserID,
                        UpdateDate,
                        Status,
                        Terminal,
                        HappyCallStatus};
                rowExchangeOfferJobRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExchangeOfferJobRow);
                return rowExchangeOfferJobRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferJobRow FindByJobID(int JobID) {
                return ((ExchangeOfferJobRow)(this.Rows.Find(new object[] {
                            JobID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ExchangeOfferJobDataTable cln = ((ExchangeOfferJobDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExchangeOfferJobDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJobID = base.Columns["JobID"];
                this.columnJobNo = base.Columns["JobNo"];
                this.columnContactMode = base.Columns["ContactMode"];
                this.columnContactDate = base.Columns["ContactDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnAddress = base.Columns["Address"];
                this.columnContactNo = base.Columns["ContactNo"];
                this.columnEmail = base.Columns["Email"];
                this.columnAssignedVenderID = base.Columns["AssignedVenderID"];
                this.columnParentCustomerID = base.Columns["ParentCustomerID"];
                this.columnAssignDate = base.Columns["AssignDate"];
                this.columnExpectedVisitDate = base.Columns["ExpectedVisitDate"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnRefInvoiceNo = base.Columns["RefInvoiceNo"];
                this.columnSalesExecuteDate = base.Columns["SalesExecuteDate"];
                this.columnCancelNote = base.Columns["CancelNote"];
                this.columnCancelDate = base.Columns["CancelDate"];
                this.columnCreateUserID = base.Columns["CreateUserID"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnUpdateUserID = base.Columns["UpdateUserID"];
                this.columnUpdateDate = base.Columns["UpdateDate"];
                this.columnStatus = base.Columns["Status"];
                this.columnTerminal = base.Columns["Terminal"];
                this.columnHappyCallStatus = base.Columns["HappyCallStatus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJobID = new global::System.Data.DataColumn("JobID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobID);
                this.columnJobNo = new global::System.Data.DataColumn("JobNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobNo);
                this.columnContactMode = new global::System.Data.DataColumn("ContactMode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactMode);
                this.columnContactDate = new global::System.Data.DataColumn("ContactDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnContactNo = new global::System.Data.DataColumn("ContactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactNo);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnAssignedVenderID = new global::System.Data.DataColumn("AssignedVenderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignedVenderID);
                this.columnParentCustomerID = new global::System.Data.DataColumn("ParentCustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentCustomerID);
                this.columnAssignDate = new global::System.Data.DataColumn("AssignDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignDate);
                this.columnExpectedVisitDate = new global::System.Data.DataColumn("ExpectedVisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpectedVisitDate);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnRefInvoiceNo = new global::System.Data.DataColumn("RefInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefInvoiceNo);
                this.columnSalesExecuteDate = new global::System.Data.DataColumn("SalesExecuteDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesExecuteDate);
                this.columnCancelNote = new global::System.Data.DataColumn("CancelNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelNote);
                this.columnCancelDate = new global::System.Data.DataColumn("CancelDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelDate);
                this.columnCreateUserID = new global::System.Data.DataColumn("CreateUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateUserID);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnUpdateUserID = new global::System.Data.DataColumn("UpdateUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUserID);
                this.columnUpdateDate = new global::System.Data.DataColumn("UpdateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDate);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnTerminal = new global::System.Data.DataColumn("Terminal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerminal);
                this.columnHappyCallStatus = new global::System.Data.DataColumn("HappyCallStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHappyCallStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnJobID}, true));
                this.columnJobID.AllowDBNull = false;
                this.columnJobID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferJobRow NewExchangeOfferJobRow() {
                return ((ExchangeOfferJobRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExchangeOfferJobRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ExchangeOfferJobRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExchangeOfferJobRowChanged != null)) {
                    this.ExchangeOfferJobRowChanged(this, new ExchangeOfferJobRowChangeEvent(((ExchangeOfferJobRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExchangeOfferJobRowChanging != null)) {
                    this.ExchangeOfferJobRowChanging(this, new ExchangeOfferJobRowChangeEvent(((ExchangeOfferJobRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExchangeOfferJobRowDeleted != null)) {
                    this.ExchangeOfferJobRowDeleted(this, new ExchangeOfferJobRowChangeEvent(((ExchangeOfferJobRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExchangeOfferJobRowDeleting != null)) {
                    this.ExchangeOfferJobRowDeleting(this, new ExchangeOfferJobRowChangeEvent(((ExchangeOfferJobRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveExchangeOfferJobRow(ExchangeOfferJobRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSExchangeOfferJob ds = new DSExchangeOfferJob();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExchangeOfferJobDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExchangeOfferJobDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJobID;
            
            private global::System.Data.DataColumn columnProductDetail;
            
            private global::System.Data.DataColumn columnProductType;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnProductSize;
            
            private global::System.Data.DataColumn columnBrandName;
            
            private global::System.Data.DataColumn columnHaveRemortCtrl;
            
            private global::System.Data.DataColumn columnCondition;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferJobDetailDataTable() {
                this.TableName = "ExchangeOfferJobDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExchangeOfferJobDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ExchangeOfferJobDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobIDColumn {
                get {
                    return this.columnJobID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductDetailColumn {
                get {
                    return this.columnProductDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductTypeColumn {
                get {
                    return this.columnProductType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductSizeColumn {
                get {
                    return this.columnProductSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandNameColumn {
                get {
                    return this.columnBrandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HaveRemortCtrlColumn {
                get {
                    return this.columnHaveRemortCtrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConditionColumn {
                get {
                    return this.columnCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferJobDetailRow this[int index] {
                get {
                    return ((ExchangeOfferJobDetailRow)(this.Rows[index]));
                }
            }
            
            public event ExchangeOfferJobDetailRowChangeEventHandler ExchangeOfferJobDetailRowChanging;
            
            public event ExchangeOfferJobDetailRowChangeEventHandler ExchangeOfferJobDetailRowChanged;
            
            public event ExchangeOfferJobDetailRowChangeEventHandler ExchangeOfferJobDetailRowDeleting;
            
            public event ExchangeOfferJobDetailRowChangeEventHandler ExchangeOfferJobDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddExchangeOfferJobDetailRow(ExchangeOfferJobDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferJobDetailRow AddExchangeOfferJobDetailRow(int JobID, string ProductDetail, int ProductType, int Quantity, string ProductSize, string BrandName, int HaveRemortCtrl, int Condition) {
                ExchangeOfferJobDetailRow rowExchangeOfferJobDetailRow = ((ExchangeOfferJobDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JobID,
                        ProductDetail,
                        ProductType,
                        Quantity,
                        ProductSize,
                        BrandName,
                        HaveRemortCtrl,
                        Condition};
                rowExchangeOfferJobDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExchangeOfferJobDetailRow);
                return rowExchangeOfferJobDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ExchangeOfferJobDetailDataTable cln = ((ExchangeOfferJobDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExchangeOfferJobDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJobID = base.Columns["JobID"];
                this.columnProductDetail = base.Columns["ProductDetail"];
                this.columnProductType = base.Columns["ProductType"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnProductSize = base.Columns["ProductSize"];
                this.columnBrandName = base.Columns["BrandName"];
                this.columnHaveRemortCtrl = base.Columns["HaveRemortCtrl"];
                this.columnCondition = base.Columns["Condition"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJobID = new global::System.Data.DataColumn("JobID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobID);
                this.columnProductDetail = new global::System.Data.DataColumn("ProductDetail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductDetail);
                this.columnProductType = new global::System.Data.DataColumn("ProductType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductType);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnProductSize = new global::System.Data.DataColumn("ProductSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductSize);
                this.columnBrandName = new global::System.Data.DataColumn("BrandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandName);
                this.columnHaveRemortCtrl = new global::System.Data.DataColumn("HaveRemortCtrl", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHaveRemortCtrl);
                this.columnCondition = new global::System.Data.DataColumn("Condition", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferJobDetailRow NewExchangeOfferJobDetailRow() {
                return ((ExchangeOfferJobDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExchangeOfferJobDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ExchangeOfferJobDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExchangeOfferJobDetailRowChanged != null)) {
                    this.ExchangeOfferJobDetailRowChanged(this, new ExchangeOfferJobDetailRowChangeEvent(((ExchangeOfferJobDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExchangeOfferJobDetailRowChanging != null)) {
                    this.ExchangeOfferJobDetailRowChanging(this, new ExchangeOfferJobDetailRowChangeEvent(((ExchangeOfferJobDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExchangeOfferJobDetailRowDeleted != null)) {
                    this.ExchangeOfferJobDetailRowDeleted(this, new ExchangeOfferJobDetailRowChangeEvent(((ExchangeOfferJobDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExchangeOfferJobDetailRowDeleting != null)) {
                    this.ExchangeOfferJobDetailRowDeleting(this, new ExchangeOfferJobDetailRowChangeEvent(((ExchangeOfferJobDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveExchangeOfferJobDetailRow(ExchangeOfferJobDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSExchangeOfferJob ds = new DSExchangeOfferJob();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExchangeOfferJobDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ExchangeOfferJobRow : global::System.Data.DataRow {
            
            private ExchangeOfferJobDataTable tableExchangeOfferJob;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExchangeOfferJobRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExchangeOfferJob = ((ExchangeOfferJobDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JobID {
                get {
                    return ((int)(this[this.tableExchangeOfferJob.JobIDColumn]));
                }
                set {
                    this[this.tableExchangeOfferJob.JobIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobNo {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferJob.JobNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobNo\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.JobNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContactMode {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferJob.ContactModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactMode\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.ContactModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ContactDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExchangeOfferJob.ContactDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactDate\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.ContactDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferJob.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferJob.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactNo {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferJob.ContactNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactNo\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.ContactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferJob.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssignedVenderID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferJob.AssignedVenderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignedVenderID\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.AssignedVenderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParentCustomerID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferJob.ParentCustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentCustomerID\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.ParentCustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AssignDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExchangeOfferJob.AssignDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignDate\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.AssignDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ExpectedVisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExchangeOfferJob.ExpectedVisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpectedVisitDate\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.ExpectedVisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferJob.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RefInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferJob.RefInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefInvoiceNo\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.RefInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalesExecuteDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExchangeOfferJob.SalesExecuteDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesExecuteDate\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.SalesExecuteDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CancelNote {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferJob.CancelNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CancelNote\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.CancelNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CancelDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExchangeOfferJob.CancelDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CancelDate\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.CancelDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreateUserID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferJob.CreateUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateUserID\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.CreateUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExchangeOfferJob.CreateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateDate\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdateUserID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferJob.UpdateUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateUserID\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.UpdateUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UpdateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExchangeOfferJob.UpdateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateDate\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.UpdateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Status {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferJob.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Terminal {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferJob.TerminalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Terminal\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.TerminalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HappyCallStatus {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferJob.HappyCallStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HappyCallStatus\' in table \'ExchangeOfferJob\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJob.HappyCallStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobNoNull() {
                return this.IsNull(this.tableExchangeOfferJob.JobNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobNoNull() {
                this[this.tableExchangeOfferJob.JobNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactModeNull() {
                return this.IsNull(this.tableExchangeOfferJob.ContactModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactModeNull() {
                this[this.tableExchangeOfferJob.ContactModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactDateNull() {
                return this.IsNull(this.tableExchangeOfferJob.ContactDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactDateNull() {
                this[this.tableExchangeOfferJob.ContactDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableExchangeOfferJob.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableExchangeOfferJob.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableExchangeOfferJob.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableExchangeOfferJob.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNoNull() {
                return this.IsNull(this.tableExchangeOfferJob.ContactNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNoNull() {
                this[this.tableExchangeOfferJob.ContactNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableExchangeOfferJob.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableExchangeOfferJob.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssignedVenderIDNull() {
                return this.IsNull(this.tableExchangeOfferJob.AssignedVenderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssignedVenderIDNull() {
                this[this.tableExchangeOfferJob.AssignedVenderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentCustomerIDNull() {
                return this.IsNull(this.tableExchangeOfferJob.ParentCustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentCustomerIDNull() {
                this[this.tableExchangeOfferJob.ParentCustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssignDateNull() {
                return this.IsNull(this.tableExchangeOfferJob.AssignDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssignDateNull() {
                this[this.tableExchangeOfferJob.AssignDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpectedVisitDateNull() {
                return this.IsNull(this.tableExchangeOfferJob.ExpectedVisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpectedVisitDateNull() {
                this[this.tableExchangeOfferJob.ExpectedVisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableExchangeOfferJob.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableExchangeOfferJob.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefInvoiceNoNull() {
                return this.IsNull(this.tableExchangeOfferJob.RefInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefInvoiceNoNull() {
                this[this.tableExchangeOfferJob.RefInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesExecuteDateNull() {
                return this.IsNull(this.tableExchangeOfferJob.SalesExecuteDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesExecuteDateNull() {
                this[this.tableExchangeOfferJob.SalesExecuteDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCancelNoteNull() {
                return this.IsNull(this.tableExchangeOfferJob.CancelNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCancelNoteNull() {
                this[this.tableExchangeOfferJob.CancelNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCancelDateNull() {
                return this.IsNull(this.tableExchangeOfferJob.CancelDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCancelDateNull() {
                this[this.tableExchangeOfferJob.CancelDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreateUserIDNull() {
                return this.IsNull(this.tableExchangeOfferJob.CreateUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreateUserIDNull() {
                this[this.tableExchangeOfferJob.CreateUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreateDateNull() {
                return this.IsNull(this.tableExchangeOfferJob.CreateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreateDateNull() {
                this[this.tableExchangeOfferJob.CreateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateUserIDNull() {
                return this.IsNull(this.tableExchangeOfferJob.UpdateUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateUserIDNull() {
                this[this.tableExchangeOfferJob.UpdateUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateDateNull() {
                return this.IsNull(this.tableExchangeOfferJob.UpdateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateDateNull() {
                this[this.tableExchangeOfferJob.UpdateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableExchangeOfferJob.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableExchangeOfferJob.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTerminalNull() {
                return this.IsNull(this.tableExchangeOfferJob.TerminalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTerminalNull() {
                this[this.tableExchangeOfferJob.TerminalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHappyCallStatusNull() {
                return this.IsNull(this.tableExchangeOfferJob.HappyCallStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHappyCallStatusNull() {
                this[this.tableExchangeOfferJob.HappyCallStatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ExchangeOfferJobDetailRow : global::System.Data.DataRow {
            
            private ExchangeOfferJobDetailDataTable tableExchangeOfferJobDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExchangeOfferJobDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExchangeOfferJobDetail = ((ExchangeOfferJobDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JobID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferJobDetail.JobIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobID\' in table \'ExchangeOfferJobDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJobDetail.JobIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductDetail {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferJobDetail.ProductDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductDetail\' in table \'ExchangeOfferJobDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJobDetail.ProductDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProductType {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferJobDetail.ProductTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductType\' in table \'ExchangeOfferJobDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJobDetail.ProductTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferJobDetail.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'ExchangeOfferJobDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJobDetail.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductSize {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferJobDetail.ProductSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductSize\' in table \'ExchangeOfferJobDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJobDetail.ProductSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BrandName {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferJobDetail.BrandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandName\' in table \'ExchangeOfferJobDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJobDetail.BrandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HaveRemortCtrl {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferJobDetail.HaveRemortCtrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HaveRemortCtrl\' in table \'ExchangeOfferJobDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJobDetail.HaveRemortCtrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferJobDetail.ConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Condition\' in table \'ExchangeOfferJobDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferJobDetail.ConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobIDNull() {
                return this.IsNull(this.tableExchangeOfferJobDetail.JobIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobIDNull() {
                this[this.tableExchangeOfferJobDetail.JobIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductDetailNull() {
                return this.IsNull(this.tableExchangeOfferJobDetail.ProductDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductDetailNull() {
                this[this.tableExchangeOfferJobDetail.ProductDetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductTypeNull() {
                return this.IsNull(this.tableExchangeOfferJobDetail.ProductTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductTypeNull() {
                this[this.tableExchangeOfferJobDetail.ProductTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableExchangeOfferJobDetail.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableExchangeOfferJobDetail.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductSizeNull() {
                return this.IsNull(this.tableExchangeOfferJobDetail.ProductSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductSizeNull() {
                this[this.tableExchangeOfferJobDetail.ProductSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandNameNull() {
                return this.IsNull(this.tableExchangeOfferJobDetail.BrandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandNameNull() {
                this[this.tableExchangeOfferJobDetail.BrandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHaveRemortCtrlNull() {
                return this.IsNull(this.tableExchangeOfferJobDetail.HaveRemortCtrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHaveRemortCtrlNull() {
                this[this.tableExchangeOfferJobDetail.HaveRemortCtrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConditionNull() {
                return this.IsNull(this.tableExchangeOfferJobDetail.ConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConditionNull() {
                this[this.tableExchangeOfferJobDetail.ConditionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ExchangeOfferJobRowChangeEvent : global::System.EventArgs {
            
            private ExchangeOfferJobRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferJobRowChangeEvent(ExchangeOfferJobRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferJobRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ExchangeOfferJobDetailRowChangeEvent : global::System.EventArgs {
            
            private ExchangeOfferJobDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferJobDetailRowChangeEvent(ExchangeOfferJobDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferJobDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591