//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CJ.Class.POS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSProductGroups")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSProductGroups : global::System.Data.DataSet {
        
        private PGGroupDataTable tablePGGroup;
        
        private MAGGroupDataTable tableMAGGroup;
        
        private ASGGroupDataTable tableASGGroup;
        
        private AGGroupDataTable tableAGGroup;
        
        private ProductGroupDataTable tableProductGroup;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSProductGroups() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSProductGroups(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PGGroup"] != null)) {
                    base.Tables.Add(new PGGroupDataTable(ds.Tables["PGGroup"]));
                }
                if ((ds.Tables["MAGGroup"] != null)) {
                    base.Tables.Add(new MAGGroupDataTable(ds.Tables["MAGGroup"]));
                }
                if ((ds.Tables["ASGGroup"] != null)) {
                    base.Tables.Add(new ASGGroupDataTable(ds.Tables["ASGGroup"]));
                }
                if ((ds.Tables["AGGroup"] != null)) {
                    base.Tables.Add(new AGGroupDataTable(ds.Tables["AGGroup"]));
                }
                if ((ds.Tables["ProductGroup"] != null)) {
                    base.Tables.Add(new ProductGroupDataTable(ds.Tables["ProductGroup"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PGGroupDataTable PGGroup {
            get {
                return this.tablePGGroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MAGGroupDataTable MAGGroup {
            get {
                return this.tableMAGGroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ASGGroupDataTable ASGGroup {
            get {
                return this.tableASGGroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AGGroupDataTable AGGroup {
            get {
                return this.tableAGGroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductGroupDataTable ProductGroup {
            get {
                return this.tableProductGroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSProductGroups cln = ((DSProductGroups)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PGGroup"] != null)) {
                    base.Tables.Add(new PGGroupDataTable(ds.Tables["PGGroup"]));
                }
                if ((ds.Tables["MAGGroup"] != null)) {
                    base.Tables.Add(new MAGGroupDataTable(ds.Tables["MAGGroup"]));
                }
                if ((ds.Tables["ASGGroup"] != null)) {
                    base.Tables.Add(new ASGGroupDataTable(ds.Tables["ASGGroup"]));
                }
                if ((ds.Tables["AGGroup"] != null)) {
                    base.Tables.Add(new AGGroupDataTable(ds.Tables["AGGroup"]));
                }
                if ((ds.Tables["ProductGroup"] != null)) {
                    base.Tables.Add(new ProductGroupDataTable(ds.Tables["ProductGroup"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePGGroup = ((PGGroupDataTable)(base.Tables["PGGroup"]));
            if ((initTable == true)) {
                if ((this.tablePGGroup != null)) {
                    this.tablePGGroup.InitVars();
                }
            }
            this.tableMAGGroup = ((MAGGroupDataTable)(base.Tables["MAGGroup"]));
            if ((initTable == true)) {
                if ((this.tableMAGGroup != null)) {
                    this.tableMAGGroup.InitVars();
                }
            }
            this.tableASGGroup = ((ASGGroupDataTable)(base.Tables["ASGGroup"]));
            if ((initTable == true)) {
                if ((this.tableASGGroup != null)) {
                    this.tableASGGroup.InitVars();
                }
            }
            this.tableAGGroup = ((AGGroupDataTable)(base.Tables["AGGroup"]));
            if ((initTable == true)) {
                if ((this.tableAGGroup != null)) {
                    this.tableAGGroup.InitVars();
                }
            }
            this.tableProductGroup = ((ProductGroupDataTable)(base.Tables["ProductGroup"]));
            if ((initTable == true)) {
                if ((this.tableProductGroup != null)) {
                    this.tableProductGroup.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSProductGroups";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSProductGroups.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePGGroup = new PGGroupDataTable();
            base.Tables.Add(this.tablePGGroup);
            this.tableMAGGroup = new MAGGroupDataTable();
            base.Tables.Add(this.tableMAGGroup);
            this.tableASGGroup = new ASGGroupDataTable();
            base.Tables.Add(this.tableASGGroup);
            this.tableAGGroup = new AGGroupDataTable();
            base.Tables.Add(this.tableAGGroup);
            this.tableProductGroup = new ProductGroupDataTable();
            base.Tables.Add(this.tableProductGroup);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePGGroup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMAGGroup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeASGGroup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAGGroup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProductGroup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSProductGroups ds = new DSProductGroups();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PGGroupRowChangeEventHandler(object sender, PGGroupRowChangeEvent e);
        
        public delegate void MAGGroupRowChangeEventHandler(object sender, MAGGroupRowChangeEvent e);
        
        public delegate void ASGGroupRowChangeEventHandler(object sender, ASGGroupRowChangeEvent e);
        
        public delegate void AGGroupRowChangeEventHandler(object sender, AGGroupRowChangeEvent e);
        
        public delegate void ProductGroupRowChangeEventHandler(object sender, ProductGroupRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PGGroupDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPdtGroupId;
            
            private global::System.Data.DataColumn columnPdtGroupCode;
            
            private global::System.Data.DataColumn columnPdtGroupName;
            
            private global::System.Data.DataColumn columnPdtGroupType;
            
            private global::System.Data.DataColumn columnParentId;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnPos;
            
            private global::System.Data.DataColumn columnParentCode;
            
            private global::System.Data.DataColumn columnParentName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PGGroupDataTable() {
                this.TableName = "PGGroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PGGroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PGGroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupIdColumn {
                get {
                    return this.columnPdtGroupId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupCodeColumn {
                get {
                    return this.columnPdtGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupNameColumn {
                get {
                    return this.columnPdtGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupTypeColumn {
                get {
                    return this.columnPdtGroupType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentIdColumn {
                get {
                    return this.columnParentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosColumn {
                get {
                    return this.columnPos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentCodeColumn {
                get {
                    return this.columnParentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentNameColumn {
                get {
                    return this.columnParentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PGGroupRow this[int index] {
                get {
                    return ((PGGroupRow)(this.Rows[index]));
                }
            }
            
            public event PGGroupRowChangeEventHandler PGGroupRowChanging;
            
            public event PGGroupRowChangeEventHandler PGGroupRowChanged;
            
            public event PGGroupRowChangeEventHandler PGGroupRowDeleting;
            
            public event PGGroupRowChangeEventHandler PGGroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPGGroupRow(PGGroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PGGroupRow AddPGGroupRow(long PdtGroupId, string PdtGroupCode, string PdtGroupName, short PdtGroupType, short ParentId, short IsActive, string ProductName, string ProductCode, long ProductID, short Pos, string ParentCode, string ParentName) {
                PGGroupRow rowPGGroupRow = ((PGGroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PdtGroupId,
                        PdtGroupCode,
                        PdtGroupName,
                        PdtGroupType,
                        ParentId,
                        IsActive,
                        ProductName,
                        ProductCode,
                        ProductID,
                        Pos,
                        ParentCode,
                        ParentName};
                rowPGGroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPGGroupRow);
                return rowPGGroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PGGroupDataTable cln = ((PGGroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PGGroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPdtGroupId = base.Columns["PdtGroupId"];
                this.columnPdtGroupCode = base.Columns["PdtGroupCode"];
                this.columnPdtGroupName = base.Columns["PdtGroupName"];
                this.columnPdtGroupType = base.Columns["PdtGroupType"];
                this.columnParentId = base.Columns["ParentId"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnProductID = base.Columns["ProductID"];
                this.columnPos = base.Columns["Pos"];
                this.columnParentCode = base.Columns["ParentCode"];
                this.columnParentName = base.Columns["ParentName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPdtGroupId = new global::System.Data.DataColumn("PdtGroupId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupId);
                this.columnPdtGroupCode = new global::System.Data.DataColumn("PdtGroupCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupCode);
                this.columnPdtGroupName = new global::System.Data.DataColumn("PdtGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupName);
                this.columnPdtGroupType = new global::System.Data.DataColumn("PdtGroupType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupType);
                this.columnParentId = new global::System.Data.DataColumn("ParentId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentId);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnPos = new global::System.Data.DataColumn("Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPos);
                this.columnParentCode = new global::System.Data.DataColumn("ParentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentCode);
                this.columnParentName = new global::System.Data.DataColumn("ParentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PGGroupRow NewPGGroupRow() {
                return ((PGGroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PGGroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PGGroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PGGroupRowChanged != null)) {
                    this.PGGroupRowChanged(this, new PGGroupRowChangeEvent(((PGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PGGroupRowChanging != null)) {
                    this.PGGroupRowChanging(this, new PGGroupRowChangeEvent(((PGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PGGroupRowDeleted != null)) {
                    this.PGGroupRowDeleted(this, new PGGroupRowChangeEvent(((PGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PGGroupRowDeleting != null)) {
                    this.PGGroupRowDeleting(this, new PGGroupRowChangeEvent(((PGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePGGroupRow(PGGroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSProductGroups ds = new DSProductGroups();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PGGroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MAGGroupDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPdtGroupId;
            
            private global::System.Data.DataColumn columnPdtGroupCode;
            
            private global::System.Data.DataColumn columnPdtGroupName;
            
            private global::System.Data.DataColumn columnPdtGroupType;
            
            private global::System.Data.DataColumn columnParentId;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnPos;
            
            private global::System.Data.DataColumn columnParentCode;
            
            private global::System.Data.DataColumn columnParentName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAGGroupDataTable() {
                this.TableName = "MAGGroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MAGGroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MAGGroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupIdColumn {
                get {
                    return this.columnPdtGroupId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupCodeColumn {
                get {
                    return this.columnPdtGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupNameColumn {
                get {
                    return this.columnPdtGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupTypeColumn {
                get {
                    return this.columnPdtGroupType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentIdColumn {
                get {
                    return this.columnParentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosColumn {
                get {
                    return this.columnPos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentCodeColumn {
                get {
                    return this.columnParentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentNameColumn {
                get {
                    return this.columnParentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAGGroupRow this[int index] {
                get {
                    return ((MAGGroupRow)(this.Rows[index]));
                }
            }
            
            public event MAGGroupRowChangeEventHandler MAGGroupRowChanging;
            
            public event MAGGroupRowChangeEventHandler MAGGroupRowChanged;
            
            public event MAGGroupRowChangeEventHandler MAGGroupRowDeleting;
            
            public event MAGGroupRowChangeEventHandler MAGGroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMAGGroupRow(MAGGroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAGGroupRow AddMAGGroupRow(long PdtGroupId, string PdtGroupCode, string PdtGroupName, short PdtGroupType, short ParentId, short IsActive, string ProductName, string ProductCode, long ProductID, short Pos, string ParentCode, string ParentName) {
                MAGGroupRow rowMAGGroupRow = ((MAGGroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PdtGroupId,
                        PdtGroupCode,
                        PdtGroupName,
                        PdtGroupType,
                        ParentId,
                        IsActive,
                        ProductName,
                        ProductCode,
                        ProductID,
                        Pos,
                        ParentCode,
                        ParentName};
                rowMAGGroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMAGGroupRow);
                return rowMAGGroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MAGGroupDataTable cln = ((MAGGroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MAGGroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPdtGroupId = base.Columns["PdtGroupId"];
                this.columnPdtGroupCode = base.Columns["PdtGroupCode"];
                this.columnPdtGroupName = base.Columns["PdtGroupName"];
                this.columnPdtGroupType = base.Columns["PdtGroupType"];
                this.columnParentId = base.Columns["ParentId"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnProductID = base.Columns["ProductID"];
                this.columnPos = base.Columns["Pos"];
                this.columnParentCode = base.Columns["ParentCode"];
                this.columnParentName = base.Columns["ParentName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPdtGroupId = new global::System.Data.DataColumn("PdtGroupId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupId);
                this.columnPdtGroupCode = new global::System.Data.DataColumn("PdtGroupCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupCode);
                this.columnPdtGroupName = new global::System.Data.DataColumn("PdtGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupName);
                this.columnPdtGroupType = new global::System.Data.DataColumn("PdtGroupType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupType);
                this.columnParentId = new global::System.Data.DataColumn("ParentId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentId);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnPos = new global::System.Data.DataColumn("Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPos);
                this.columnParentCode = new global::System.Data.DataColumn("ParentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentCode);
                this.columnParentName = new global::System.Data.DataColumn("ParentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAGGroupRow NewMAGGroupRow() {
                return ((MAGGroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MAGGroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MAGGroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MAGGroupRowChanged != null)) {
                    this.MAGGroupRowChanged(this, new MAGGroupRowChangeEvent(((MAGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MAGGroupRowChanging != null)) {
                    this.MAGGroupRowChanging(this, new MAGGroupRowChangeEvent(((MAGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MAGGroupRowDeleted != null)) {
                    this.MAGGroupRowDeleted(this, new MAGGroupRowChangeEvent(((MAGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MAGGroupRowDeleting != null)) {
                    this.MAGGroupRowDeleting(this, new MAGGroupRowChangeEvent(((MAGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMAGGroupRow(MAGGroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSProductGroups ds = new DSProductGroups();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MAGGroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ASGGroupDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPdtGroupId;
            
            private global::System.Data.DataColumn columnPdtGroupCode;
            
            private global::System.Data.DataColumn columnPdtGroupName;
            
            private global::System.Data.DataColumn columnPdtGroupType;
            
            private global::System.Data.DataColumn columnParentId;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnPos;
            
            private global::System.Data.DataColumn columnParentCode;
            
            private global::System.Data.DataColumn columnParentName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASGGroupDataTable() {
                this.TableName = "ASGGroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ASGGroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ASGGroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupIdColumn {
                get {
                    return this.columnPdtGroupId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupCodeColumn {
                get {
                    return this.columnPdtGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupNameColumn {
                get {
                    return this.columnPdtGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupTypeColumn {
                get {
                    return this.columnPdtGroupType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentIdColumn {
                get {
                    return this.columnParentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosColumn {
                get {
                    return this.columnPos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentCodeColumn {
                get {
                    return this.columnParentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentNameColumn {
                get {
                    return this.columnParentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASGGroupRow this[int index] {
                get {
                    return ((ASGGroupRow)(this.Rows[index]));
                }
            }
            
            public event ASGGroupRowChangeEventHandler ASGGroupRowChanging;
            
            public event ASGGroupRowChangeEventHandler ASGGroupRowChanged;
            
            public event ASGGroupRowChangeEventHandler ASGGroupRowDeleting;
            
            public event ASGGroupRowChangeEventHandler ASGGroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddASGGroupRow(ASGGroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASGGroupRow AddASGGroupRow(long PdtGroupId, string PdtGroupCode, string PdtGroupName, short PdtGroupType, short ParentId, short IsActive, string ProductName, string ProductCode, long ProductID, short Pos, string ParentCode, string ParentName) {
                ASGGroupRow rowASGGroupRow = ((ASGGroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PdtGroupId,
                        PdtGroupCode,
                        PdtGroupName,
                        PdtGroupType,
                        ParentId,
                        IsActive,
                        ProductName,
                        ProductCode,
                        ProductID,
                        Pos,
                        ParentCode,
                        ParentName};
                rowASGGroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowASGGroupRow);
                return rowASGGroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ASGGroupDataTable cln = ((ASGGroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ASGGroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPdtGroupId = base.Columns["PdtGroupId"];
                this.columnPdtGroupCode = base.Columns["PdtGroupCode"];
                this.columnPdtGroupName = base.Columns["PdtGroupName"];
                this.columnPdtGroupType = base.Columns["PdtGroupType"];
                this.columnParentId = base.Columns["ParentId"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnProductID = base.Columns["ProductID"];
                this.columnPos = base.Columns["Pos"];
                this.columnParentCode = base.Columns["ParentCode"];
                this.columnParentName = base.Columns["ParentName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPdtGroupId = new global::System.Data.DataColumn("PdtGroupId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupId);
                this.columnPdtGroupCode = new global::System.Data.DataColumn("PdtGroupCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupCode);
                this.columnPdtGroupName = new global::System.Data.DataColumn("PdtGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupName);
                this.columnPdtGroupType = new global::System.Data.DataColumn("PdtGroupType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupType);
                this.columnParentId = new global::System.Data.DataColumn("ParentId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentId);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnPos = new global::System.Data.DataColumn("Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPos);
                this.columnParentCode = new global::System.Data.DataColumn("ParentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentCode);
                this.columnParentName = new global::System.Data.DataColumn("ParentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASGGroupRow NewASGGroupRow() {
                return ((ASGGroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ASGGroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ASGGroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ASGGroupRowChanged != null)) {
                    this.ASGGroupRowChanged(this, new ASGGroupRowChangeEvent(((ASGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ASGGroupRowChanging != null)) {
                    this.ASGGroupRowChanging(this, new ASGGroupRowChangeEvent(((ASGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ASGGroupRowDeleted != null)) {
                    this.ASGGroupRowDeleted(this, new ASGGroupRowChangeEvent(((ASGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ASGGroupRowDeleting != null)) {
                    this.ASGGroupRowDeleting(this, new ASGGroupRowChangeEvent(((ASGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveASGGroupRow(ASGGroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSProductGroups ds = new DSProductGroups();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ASGGroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AGGroupDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPdtGroupId;
            
            private global::System.Data.DataColumn columnPdtGroupCode;
            
            private global::System.Data.DataColumn columnPdtGroupName;
            
            private global::System.Data.DataColumn columnPdtGroupType;
            
            private global::System.Data.DataColumn columnParentId;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnPos;
            
            private global::System.Data.DataColumn columnParentCode;
            
            private global::System.Data.DataColumn columnParentName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AGGroupDataTable() {
                this.TableName = "AGGroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AGGroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AGGroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupIdColumn {
                get {
                    return this.columnPdtGroupId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupCodeColumn {
                get {
                    return this.columnPdtGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupNameColumn {
                get {
                    return this.columnPdtGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupTypeColumn {
                get {
                    return this.columnPdtGroupType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentIdColumn {
                get {
                    return this.columnParentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosColumn {
                get {
                    return this.columnPos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentCodeColumn {
                get {
                    return this.columnParentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentNameColumn {
                get {
                    return this.columnParentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AGGroupRow this[int index] {
                get {
                    return ((AGGroupRow)(this.Rows[index]));
                }
            }
            
            public event AGGroupRowChangeEventHandler AGGroupRowChanging;
            
            public event AGGroupRowChangeEventHandler AGGroupRowChanged;
            
            public event AGGroupRowChangeEventHandler AGGroupRowDeleting;
            
            public event AGGroupRowChangeEventHandler AGGroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAGGroupRow(AGGroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AGGroupRow AddAGGroupRow(long PdtGroupId, string PdtGroupCode, string PdtGroupName, short PdtGroupType, short ParentId, short IsActive, string ProductName, string ProductCode, long ProductID, short Pos, string ParentCode, string ParentName) {
                AGGroupRow rowAGGroupRow = ((AGGroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PdtGroupId,
                        PdtGroupCode,
                        PdtGroupName,
                        PdtGroupType,
                        ParentId,
                        IsActive,
                        ProductName,
                        ProductCode,
                        ProductID,
                        Pos,
                        ParentCode,
                        ParentName};
                rowAGGroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAGGroupRow);
                return rowAGGroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AGGroupDataTable cln = ((AGGroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AGGroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPdtGroupId = base.Columns["PdtGroupId"];
                this.columnPdtGroupCode = base.Columns["PdtGroupCode"];
                this.columnPdtGroupName = base.Columns["PdtGroupName"];
                this.columnPdtGroupType = base.Columns["PdtGroupType"];
                this.columnParentId = base.Columns["ParentId"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnProductID = base.Columns["ProductID"];
                this.columnPos = base.Columns["Pos"];
                this.columnParentCode = base.Columns["ParentCode"];
                this.columnParentName = base.Columns["ParentName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPdtGroupId = new global::System.Data.DataColumn("PdtGroupId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupId);
                this.columnPdtGroupCode = new global::System.Data.DataColumn("PdtGroupCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupCode);
                this.columnPdtGroupName = new global::System.Data.DataColumn("PdtGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupName);
                this.columnPdtGroupType = new global::System.Data.DataColumn("PdtGroupType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupType);
                this.columnParentId = new global::System.Data.DataColumn("ParentId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentId);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnPos = new global::System.Data.DataColumn("Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPos);
                this.columnParentCode = new global::System.Data.DataColumn("ParentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentCode);
                this.columnParentName = new global::System.Data.DataColumn("ParentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AGGroupRow NewAGGroupRow() {
                return ((AGGroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AGGroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AGGroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AGGroupRowChanged != null)) {
                    this.AGGroupRowChanged(this, new AGGroupRowChangeEvent(((AGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AGGroupRowChanging != null)) {
                    this.AGGroupRowChanging(this, new AGGroupRowChangeEvent(((AGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AGGroupRowDeleted != null)) {
                    this.AGGroupRowDeleted(this, new AGGroupRowChangeEvent(((AGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AGGroupRowDeleting != null)) {
                    this.AGGroupRowDeleting(this, new AGGroupRowChangeEvent(((AGGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAGGroupRow(AGGroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSProductGroups ds = new DSProductGroups();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AGGroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductGroupDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPdtGroupId;
            
            private global::System.Data.DataColumn columnPdtGroupCode;
            
            private global::System.Data.DataColumn columnPdtGroupName;
            
            private global::System.Data.DataColumn columnPdtGroupType;
            
            private global::System.Data.DataColumn columnParentId;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnPos;
            
            private global::System.Data.DataColumn columnParentCode;
            
            private global::System.Data.DataColumn columnParentName;
            
            private global::System.Data.DataColumn columnTransferType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductGroupDataTable() {
                this.TableName = "ProductGroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductGroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProductGroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupIdColumn {
                get {
                    return this.columnPdtGroupId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupCodeColumn {
                get {
                    return this.columnPdtGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupNameColumn {
                get {
                    return this.columnPdtGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PdtGroupTypeColumn {
                get {
                    return this.columnPdtGroupType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentIdColumn {
                get {
                    return this.columnParentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosColumn {
                get {
                    return this.columnPos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentCodeColumn {
                get {
                    return this.columnParentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentNameColumn {
                get {
                    return this.columnParentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransferTypeColumn {
                get {
                    return this.columnTransferType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductGroupRow this[int index] {
                get {
                    return ((ProductGroupRow)(this.Rows[index]));
                }
            }
            
            public event ProductGroupRowChangeEventHandler ProductGroupRowChanging;
            
            public event ProductGroupRowChangeEventHandler ProductGroupRowChanged;
            
            public event ProductGroupRowChangeEventHandler ProductGroupRowDeleting;
            
            public event ProductGroupRowChangeEventHandler ProductGroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProductGroupRow(ProductGroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductGroupRow AddProductGroupRow(long PdtGroupId, string PdtGroupCode, string PdtGroupName, short PdtGroupType, short ParentId, short IsActive, string ProductName, string ProductCode, long ProductID, short Pos, string ParentCode, string ParentName, int TransferType) {
                ProductGroupRow rowProductGroupRow = ((ProductGroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PdtGroupId,
                        PdtGroupCode,
                        PdtGroupName,
                        PdtGroupType,
                        ParentId,
                        IsActive,
                        ProductName,
                        ProductCode,
                        ProductID,
                        Pos,
                        ParentCode,
                        ParentName,
                        TransferType};
                rowProductGroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductGroupRow);
                return rowProductGroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProductGroupDataTable cln = ((ProductGroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductGroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPdtGroupId = base.Columns["PdtGroupId"];
                this.columnPdtGroupCode = base.Columns["PdtGroupCode"];
                this.columnPdtGroupName = base.Columns["PdtGroupName"];
                this.columnPdtGroupType = base.Columns["PdtGroupType"];
                this.columnParentId = base.Columns["ParentId"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnProductID = base.Columns["ProductID"];
                this.columnPos = base.Columns["Pos"];
                this.columnParentCode = base.Columns["ParentCode"];
                this.columnParentName = base.Columns["ParentName"];
                this.columnTransferType = base.Columns["TransferType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPdtGroupId = new global::System.Data.DataColumn("PdtGroupId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupId);
                this.columnPdtGroupCode = new global::System.Data.DataColumn("PdtGroupCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupCode);
                this.columnPdtGroupName = new global::System.Data.DataColumn("PdtGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupName);
                this.columnPdtGroupType = new global::System.Data.DataColumn("PdtGroupType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPdtGroupType);
                this.columnParentId = new global::System.Data.DataColumn("ParentId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentId);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnPos = new global::System.Data.DataColumn("Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPos);
                this.columnParentCode = new global::System.Data.DataColumn("ParentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentCode);
                this.columnParentName = new global::System.Data.DataColumn("ParentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentName);
                this.columnTransferType = new global::System.Data.DataColumn("TransferType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferType);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductGroupRow NewProductGroupRow() {
                return ((ProductGroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductGroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProductGroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductGroupRowChanged != null)) {
                    this.ProductGroupRowChanged(this, new ProductGroupRowChangeEvent(((ProductGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductGroupRowChanging != null)) {
                    this.ProductGroupRowChanging(this, new ProductGroupRowChangeEvent(((ProductGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductGroupRowDeleted != null)) {
                    this.ProductGroupRowDeleted(this, new ProductGroupRowChangeEvent(((ProductGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductGroupRowDeleting != null)) {
                    this.ProductGroupRowDeleting(this, new ProductGroupRowChangeEvent(((ProductGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProductGroupRow(ProductGroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSProductGroups ds = new DSProductGroups();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductGroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PGGroupRow : global::System.Data.DataRow {
            
            private PGGroupDataTable tablePGGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PGGroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePGGroup = ((PGGroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PdtGroupId {
                get {
                    try {
                        return ((long)(this[this.tablePGGroup.PdtGroupIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupId\' in table \'PGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePGGroup.PdtGroupIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PdtGroupCode {
                get {
                    try {
                        return ((string)(this[this.tablePGGroup.PdtGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupCode\' in table \'PGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePGGroup.PdtGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PdtGroupName {
                get {
                    try {
                        return ((string)(this[this.tablePGGroup.PdtGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupName\' in table \'PGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePGGroup.PdtGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PdtGroupType {
                get {
                    try {
                        return ((short)(this[this.tablePGGroup.PdtGroupTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupType\' in table \'PGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePGGroup.PdtGroupTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ParentId {
                get {
                    try {
                        return ((short)(this[this.tablePGGroup.ParentIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentId\' in table \'PGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePGGroup.ParentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short IsActive {
                get {
                    try {
                        return ((short)(this[this.tablePGGroup.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'PGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePGGroup.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tablePGGroup.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'PGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePGGroup.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tablePGGroup.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'PGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePGGroup.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ProductID {
                get {
                    try {
                        return ((long)(this[this.tablePGGroup.ProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductID\' in table \'PGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePGGroup.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Pos {
                get {
                    try {
                        return ((short)(this[this.tablePGGroup.PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pos\' in table \'PGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePGGroup.PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentCode {
                get {
                    try {
                        return ((string)(this[this.tablePGGroup.ParentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentCode\' in table \'PGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePGGroup.ParentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentName {
                get {
                    try {
                        return ((string)(this[this.tablePGGroup.ParentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentName\' in table \'PGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePGGroup.ParentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupIdNull() {
                return this.IsNull(this.tablePGGroup.PdtGroupIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupIdNull() {
                this[this.tablePGGroup.PdtGroupIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupCodeNull() {
                return this.IsNull(this.tablePGGroup.PdtGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupCodeNull() {
                this[this.tablePGGroup.PdtGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupNameNull() {
                return this.IsNull(this.tablePGGroup.PdtGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupNameNull() {
                this[this.tablePGGroup.PdtGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupTypeNull() {
                return this.IsNull(this.tablePGGroup.PdtGroupTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupTypeNull() {
                this[this.tablePGGroup.PdtGroupTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentIdNull() {
                return this.IsNull(this.tablePGGroup.ParentIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentIdNull() {
                this[this.tablePGGroup.ParentIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tablePGGroup.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tablePGGroup.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tablePGGroup.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tablePGGroup.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tablePGGroup.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tablePGGroup.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductIDNull() {
                return this.IsNull(this.tablePGGroup.ProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductIDNull() {
                this[this.tablePGGroup.ProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosNull() {
                return this.IsNull(this.tablePGGroup.PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosNull() {
                this[this.tablePGGroup.PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentCodeNull() {
                return this.IsNull(this.tablePGGroup.ParentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentCodeNull() {
                this[this.tablePGGroup.ParentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentNameNull() {
                return this.IsNull(this.tablePGGroup.ParentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentNameNull() {
                this[this.tablePGGroup.ParentNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MAGGroupRow : global::System.Data.DataRow {
            
            private MAGGroupDataTable tableMAGGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MAGGroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMAGGroup = ((MAGGroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PdtGroupId {
                get {
                    try {
                        return ((long)(this[this.tableMAGGroup.PdtGroupIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupId\' in table \'MAGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAGGroup.PdtGroupIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PdtGroupCode {
                get {
                    try {
                        return ((string)(this[this.tableMAGGroup.PdtGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupCode\' in table \'MAGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAGGroup.PdtGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PdtGroupName {
                get {
                    try {
                        return ((string)(this[this.tableMAGGroup.PdtGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupName\' in table \'MAGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAGGroup.PdtGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PdtGroupType {
                get {
                    try {
                        return ((short)(this[this.tableMAGGroup.PdtGroupTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupType\' in table \'MAGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAGGroup.PdtGroupTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ParentId {
                get {
                    try {
                        return ((short)(this[this.tableMAGGroup.ParentIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentId\' in table \'MAGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAGGroup.ParentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short IsActive {
                get {
                    try {
                        return ((short)(this[this.tableMAGGroup.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'MAGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAGGroup.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableMAGGroup.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'MAGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAGGroup.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableMAGGroup.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'MAGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAGGroup.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ProductID {
                get {
                    try {
                        return ((long)(this[this.tableMAGGroup.ProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductID\' in table \'MAGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAGGroup.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Pos {
                get {
                    try {
                        return ((short)(this[this.tableMAGGroup.PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pos\' in table \'MAGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAGGroup.PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentCode {
                get {
                    try {
                        return ((string)(this[this.tableMAGGroup.ParentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentCode\' in table \'MAGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAGGroup.ParentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentName {
                get {
                    try {
                        return ((string)(this[this.tableMAGGroup.ParentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentName\' in table \'MAGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAGGroup.ParentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupIdNull() {
                return this.IsNull(this.tableMAGGroup.PdtGroupIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupIdNull() {
                this[this.tableMAGGroup.PdtGroupIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupCodeNull() {
                return this.IsNull(this.tableMAGGroup.PdtGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupCodeNull() {
                this[this.tableMAGGroup.PdtGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupNameNull() {
                return this.IsNull(this.tableMAGGroup.PdtGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupNameNull() {
                this[this.tableMAGGroup.PdtGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupTypeNull() {
                return this.IsNull(this.tableMAGGroup.PdtGroupTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupTypeNull() {
                this[this.tableMAGGroup.PdtGroupTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentIdNull() {
                return this.IsNull(this.tableMAGGroup.ParentIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentIdNull() {
                this[this.tableMAGGroup.ParentIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableMAGGroup.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tableMAGGroup.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableMAGGroup.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableMAGGroup.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableMAGGroup.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tableMAGGroup.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductIDNull() {
                return this.IsNull(this.tableMAGGroup.ProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductIDNull() {
                this[this.tableMAGGroup.ProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosNull() {
                return this.IsNull(this.tableMAGGroup.PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosNull() {
                this[this.tableMAGGroup.PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentCodeNull() {
                return this.IsNull(this.tableMAGGroup.ParentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentCodeNull() {
                this[this.tableMAGGroup.ParentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentNameNull() {
                return this.IsNull(this.tableMAGGroup.ParentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentNameNull() {
                this[this.tableMAGGroup.ParentNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ASGGroupRow : global::System.Data.DataRow {
            
            private ASGGroupDataTable tableASGGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ASGGroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableASGGroup = ((ASGGroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PdtGroupId {
                get {
                    try {
                        return ((long)(this[this.tableASGGroup.PdtGroupIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupId\' in table \'ASGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASGGroup.PdtGroupIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PdtGroupCode {
                get {
                    try {
                        return ((string)(this[this.tableASGGroup.PdtGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupCode\' in table \'ASGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASGGroup.PdtGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PdtGroupName {
                get {
                    try {
                        return ((string)(this[this.tableASGGroup.PdtGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupName\' in table \'ASGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASGGroup.PdtGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PdtGroupType {
                get {
                    try {
                        return ((short)(this[this.tableASGGroup.PdtGroupTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupType\' in table \'ASGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASGGroup.PdtGroupTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ParentId {
                get {
                    try {
                        return ((short)(this[this.tableASGGroup.ParentIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentId\' in table \'ASGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASGGroup.ParentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short IsActive {
                get {
                    try {
                        return ((short)(this[this.tableASGGroup.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'ASGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASGGroup.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableASGGroup.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'ASGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASGGroup.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableASGGroup.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'ASGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASGGroup.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ProductID {
                get {
                    try {
                        return ((long)(this[this.tableASGGroup.ProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductID\' in table \'ASGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASGGroup.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Pos {
                get {
                    try {
                        return ((short)(this[this.tableASGGroup.PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pos\' in table \'ASGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASGGroup.PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentCode {
                get {
                    try {
                        return ((string)(this[this.tableASGGroup.ParentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentCode\' in table \'ASGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASGGroup.ParentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentName {
                get {
                    try {
                        return ((string)(this[this.tableASGGroup.ParentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentName\' in table \'ASGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASGGroup.ParentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupIdNull() {
                return this.IsNull(this.tableASGGroup.PdtGroupIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupIdNull() {
                this[this.tableASGGroup.PdtGroupIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupCodeNull() {
                return this.IsNull(this.tableASGGroup.PdtGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupCodeNull() {
                this[this.tableASGGroup.PdtGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupNameNull() {
                return this.IsNull(this.tableASGGroup.PdtGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupNameNull() {
                this[this.tableASGGroup.PdtGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupTypeNull() {
                return this.IsNull(this.tableASGGroup.PdtGroupTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupTypeNull() {
                this[this.tableASGGroup.PdtGroupTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentIdNull() {
                return this.IsNull(this.tableASGGroup.ParentIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentIdNull() {
                this[this.tableASGGroup.ParentIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableASGGroup.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tableASGGroup.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableASGGroup.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableASGGroup.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableASGGroup.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tableASGGroup.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductIDNull() {
                return this.IsNull(this.tableASGGroup.ProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductIDNull() {
                this[this.tableASGGroup.ProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosNull() {
                return this.IsNull(this.tableASGGroup.PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosNull() {
                this[this.tableASGGroup.PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentCodeNull() {
                return this.IsNull(this.tableASGGroup.ParentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentCodeNull() {
                this[this.tableASGGroup.ParentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentNameNull() {
                return this.IsNull(this.tableASGGroup.ParentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentNameNull() {
                this[this.tableASGGroup.ParentNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AGGroupRow : global::System.Data.DataRow {
            
            private AGGroupDataTable tableAGGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AGGroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAGGroup = ((AGGroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PdtGroupId {
                get {
                    try {
                        return ((long)(this[this.tableAGGroup.PdtGroupIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupId\' in table \'AGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAGGroup.PdtGroupIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PdtGroupCode {
                get {
                    try {
                        return ((string)(this[this.tableAGGroup.PdtGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupCode\' in table \'AGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAGGroup.PdtGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PdtGroupName {
                get {
                    try {
                        return ((string)(this[this.tableAGGroup.PdtGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupName\' in table \'AGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAGGroup.PdtGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PdtGroupType {
                get {
                    try {
                        return ((short)(this[this.tableAGGroup.PdtGroupTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupType\' in table \'AGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAGGroup.PdtGroupTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ParentId {
                get {
                    try {
                        return ((short)(this[this.tableAGGroup.ParentIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentId\' in table \'AGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAGGroup.ParentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short IsActive {
                get {
                    try {
                        return ((short)(this[this.tableAGGroup.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'AGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAGGroup.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableAGGroup.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'AGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAGGroup.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableAGGroup.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'AGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAGGroup.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ProductID {
                get {
                    try {
                        return ((long)(this[this.tableAGGroup.ProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductID\' in table \'AGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAGGroup.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Pos {
                get {
                    try {
                        return ((short)(this[this.tableAGGroup.PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pos\' in table \'AGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAGGroup.PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentCode {
                get {
                    try {
                        return ((string)(this[this.tableAGGroup.ParentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentCode\' in table \'AGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAGGroup.ParentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentName {
                get {
                    try {
                        return ((string)(this[this.tableAGGroup.ParentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentName\' in table \'AGGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAGGroup.ParentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupIdNull() {
                return this.IsNull(this.tableAGGroup.PdtGroupIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupIdNull() {
                this[this.tableAGGroup.PdtGroupIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupCodeNull() {
                return this.IsNull(this.tableAGGroup.PdtGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupCodeNull() {
                this[this.tableAGGroup.PdtGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupNameNull() {
                return this.IsNull(this.tableAGGroup.PdtGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupNameNull() {
                this[this.tableAGGroup.PdtGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupTypeNull() {
                return this.IsNull(this.tableAGGroup.PdtGroupTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupTypeNull() {
                this[this.tableAGGroup.PdtGroupTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentIdNull() {
                return this.IsNull(this.tableAGGroup.ParentIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentIdNull() {
                this[this.tableAGGroup.ParentIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableAGGroup.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tableAGGroup.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableAGGroup.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableAGGroup.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableAGGroup.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tableAGGroup.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductIDNull() {
                return this.IsNull(this.tableAGGroup.ProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductIDNull() {
                this[this.tableAGGroup.ProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosNull() {
                return this.IsNull(this.tableAGGroup.PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosNull() {
                this[this.tableAGGroup.PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentCodeNull() {
                return this.IsNull(this.tableAGGroup.ParentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentCodeNull() {
                this[this.tableAGGroup.ParentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentNameNull() {
                return this.IsNull(this.tableAGGroup.ParentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentNameNull() {
                this[this.tableAGGroup.ParentNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProductGroupRow : global::System.Data.DataRow {
            
            private ProductGroupDataTable tableProductGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductGroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductGroup = ((ProductGroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PdtGroupId {
                get {
                    try {
                        return ((long)(this[this.tableProductGroup.PdtGroupIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupId\' in table \'ProductGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductGroup.PdtGroupIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PdtGroupCode {
                get {
                    try {
                        return ((string)(this[this.tableProductGroup.PdtGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupCode\' in table \'ProductGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductGroup.PdtGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PdtGroupName {
                get {
                    try {
                        return ((string)(this[this.tableProductGroup.PdtGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupName\' in table \'ProductGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductGroup.PdtGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PdtGroupType {
                get {
                    try {
                        return ((short)(this[this.tableProductGroup.PdtGroupTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PdtGroupType\' in table \'ProductGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductGroup.PdtGroupTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ParentId {
                get {
                    try {
                        return ((short)(this[this.tableProductGroup.ParentIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentId\' in table \'ProductGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductGroup.ParentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short IsActive {
                get {
                    try {
                        return ((short)(this[this.tableProductGroup.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'ProductGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductGroup.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableProductGroup.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'ProductGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductGroup.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableProductGroup.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'ProductGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductGroup.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ProductID {
                get {
                    try {
                        return ((long)(this[this.tableProductGroup.ProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductID\' in table \'ProductGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductGroup.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Pos {
                get {
                    try {
                        return ((short)(this[this.tableProductGroup.PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pos\' in table \'ProductGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductGroup.PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentCode {
                get {
                    try {
                        return ((string)(this[this.tableProductGroup.ParentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentCode\' in table \'ProductGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductGroup.ParentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentName {
                get {
                    try {
                        return ((string)(this[this.tableProductGroup.ParentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentName\' in table \'ProductGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductGroup.ParentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TransferType {
                get {
                    try {
                        return ((int)(this[this.tableProductGroup.TransferTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferType\' in table \'ProductGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductGroup.TransferTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupIdNull() {
                return this.IsNull(this.tableProductGroup.PdtGroupIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupIdNull() {
                this[this.tableProductGroup.PdtGroupIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupCodeNull() {
                return this.IsNull(this.tableProductGroup.PdtGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupCodeNull() {
                this[this.tableProductGroup.PdtGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupNameNull() {
                return this.IsNull(this.tableProductGroup.PdtGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupNameNull() {
                this[this.tableProductGroup.PdtGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPdtGroupTypeNull() {
                return this.IsNull(this.tableProductGroup.PdtGroupTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPdtGroupTypeNull() {
                this[this.tableProductGroup.PdtGroupTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentIdNull() {
                return this.IsNull(this.tableProductGroup.ParentIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentIdNull() {
                this[this.tableProductGroup.ParentIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableProductGroup.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tableProductGroup.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableProductGroup.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableProductGroup.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableProductGroup.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tableProductGroup.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductIDNull() {
                return this.IsNull(this.tableProductGroup.ProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductIDNull() {
                this[this.tableProductGroup.ProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosNull() {
                return this.IsNull(this.tableProductGroup.PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosNull() {
                this[this.tableProductGroup.PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentCodeNull() {
                return this.IsNull(this.tableProductGroup.ParentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentCodeNull() {
                this[this.tableProductGroup.ParentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentNameNull() {
                return this.IsNull(this.tableProductGroup.ParentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentNameNull() {
                this[this.tableProductGroup.ParentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransferTypeNull() {
                return this.IsNull(this.tableProductGroup.TransferTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransferTypeNull() {
                this[this.tableProductGroup.TransferTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PGGroupRowChangeEvent : global::System.EventArgs {
            
            private PGGroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PGGroupRowChangeEvent(PGGroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PGGroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MAGGroupRowChangeEvent : global::System.EventArgs {
            
            private MAGGroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAGGroupRowChangeEvent(MAGGroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAGGroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ASGGroupRowChangeEvent : global::System.EventArgs {
            
            private ASGGroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASGGroupRowChangeEvent(ASGGroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASGGroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AGGroupRowChangeEvent : global::System.EventArgs {
            
            private AGGroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AGGroupRowChangeEvent(AGGroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AGGroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProductGroupRowChangeEvent : global::System.EventArgs {
            
            private ProductGroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductGroupRowChangeEvent(ProductGroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductGroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591