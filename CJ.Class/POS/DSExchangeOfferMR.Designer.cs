//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CJ.Class.POS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSExchangeOfferMR")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSExchangeOfferMR : global::System.Data.DataSet {
        
        private ExchangeOfferMRDataTable tableExchangeOfferMR;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSExchangeOfferMR() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSExchangeOfferMR(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ExchangeOfferMR"] != null)) {
                    base.Tables.Add(new ExchangeOfferMRDataTable(ds.Tables["ExchangeOfferMR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExchangeOfferMRDataTable ExchangeOfferMR {
            get {
                return this.tableExchangeOfferMR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSExchangeOfferMR cln = ((DSExchangeOfferMR)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ExchangeOfferMR"] != null)) {
                    base.Tables.Add(new ExchangeOfferMRDataTable(ds.Tables["ExchangeOfferMR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableExchangeOfferMR = ((ExchangeOfferMRDataTable)(base.Tables["ExchangeOfferMR"]));
            if ((initTable == true)) {
                if ((this.tableExchangeOfferMR != null)) {
                    this.tableExchangeOfferMR.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSExchangeOfferMR";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSExchangeOfferMR.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableExchangeOfferMR = new ExchangeOfferMRDataTable();
            base.Tables.Add(this.tableExchangeOfferMR);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeExchangeOfferMR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSExchangeOfferMR ds = new DSExchangeOfferMR();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ExchangeOfferMRRowChangeEventHandler(object sender, ExchangeOfferMRRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExchangeOfferMRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMoneyReceiptID;
            
            private global::System.Data.DataColumn columnMoneyReceiptNo;
            
            private global::System.Data.DataColumn columnJobID;
            
            private global::System.Data.DataColumn columnCreateWHID;
            
            private global::System.Data.DataColumn columnTransferWHID;
            
            private global::System.Data.DataColumn columnRedeemWHID;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnCreateUserID;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            private global::System.Data.DataColumn columnTransferUserID;
            
            private global::System.Data.DataColumn columnTransferDate;
            
            private global::System.Data.DataColumn columnUpdateUserID;
            
            private global::System.Data.DataColumn columnUpdateDate;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnVenderTranID;
            
            private global::System.Data.DataColumn columnVenderTranNo;
            
            private global::System.Data.DataColumn columnVenderTranDate;
            
            private global::System.Data.DataColumn columnTranSide;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnFromVenderID;
            
            private global::System.Data.DataColumn columnToVenderID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferMRDataTable() {
                this.TableName = "ExchangeOfferMR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExchangeOfferMRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ExchangeOfferMRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneyReceiptIDColumn {
                get {
                    return this.columnMoneyReceiptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneyReceiptNoColumn {
                get {
                    return this.columnMoneyReceiptNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobIDColumn {
                get {
                    return this.columnJobID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateWHIDColumn {
                get {
                    return this.columnCreateWHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransferWHIDColumn {
                get {
                    return this.columnTransferWHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RedeemWHIDColumn {
                get {
                    return this.columnRedeemWHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateUserIDColumn {
                get {
                    return this.columnCreateUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransferUserIDColumn {
                get {
                    return this.columnTransferUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransferDateColumn {
                get {
                    return this.columnTransferDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateUserIDColumn {
                get {
                    return this.columnUpdateUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateColumn {
                get {
                    return this.columnUpdateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VenderTranIDColumn {
                get {
                    return this.columnVenderTranID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VenderTranNoColumn {
                get {
                    return this.columnVenderTranNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VenderTranDateColumn {
                get {
                    return this.columnVenderTranDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TranSideColumn {
                get {
                    return this.columnTranSide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromVenderIDColumn {
                get {
                    return this.columnFromVenderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToVenderIDColumn {
                get {
                    return this.columnToVenderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferMRRow this[int index] {
                get {
                    return ((ExchangeOfferMRRow)(this.Rows[index]));
                }
            }
            
            public event ExchangeOfferMRRowChangeEventHandler ExchangeOfferMRRowChanging;
            
            public event ExchangeOfferMRRowChangeEventHandler ExchangeOfferMRRowChanged;
            
            public event ExchangeOfferMRRowChangeEventHandler ExchangeOfferMRRowDeleting;
            
            public event ExchangeOfferMRRowChangeEventHandler ExchangeOfferMRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddExchangeOfferMRRow(ExchangeOfferMRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferMRRow AddExchangeOfferMRRow(
                        int MoneyReceiptID, 
                        string MoneyReceiptNo, 
                        int JobID, 
                        int CreateWHID, 
                        int TransferWHID, 
                        int RedeemWHID, 
                        double Amount, 
                        string Remarks, 
                        int CreateUserID, 
                        System.DateTime CreateDate, 
                        int TransferUserID, 
                        System.DateTime TransferDate, 
                        int UpdateUserID, 
                        System.DateTime UpdateDate, 
                        int Status, 
                        int VenderTranID, 
                        string VenderTranNo, 
                        System.DateTime VenderTranDate, 
                        int TranSide, 
                        int Type, 
                        int FromVenderID, 
                        int ToVenderID) {
                ExchangeOfferMRRow rowExchangeOfferMRRow = ((ExchangeOfferMRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MoneyReceiptID,
                        MoneyReceiptNo,
                        JobID,
                        CreateWHID,
                        TransferWHID,
                        RedeemWHID,
                        Amount,
                        Remarks,
                        CreateUserID,
                        CreateDate,
                        TransferUserID,
                        TransferDate,
                        UpdateUserID,
                        UpdateDate,
                        Status,
                        VenderTranID,
                        VenderTranNo,
                        VenderTranDate,
                        TranSide,
                        Type,
                        FromVenderID,
                        ToVenderID};
                rowExchangeOfferMRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExchangeOfferMRRow);
                return rowExchangeOfferMRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ExchangeOfferMRDataTable cln = ((ExchangeOfferMRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExchangeOfferMRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMoneyReceiptID = base.Columns["MoneyReceiptID"];
                this.columnMoneyReceiptNo = base.Columns["MoneyReceiptNo"];
                this.columnJobID = base.Columns["JobID"];
                this.columnCreateWHID = base.Columns["CreateWHID"];
                this.columnTransferWHID = base.Columns["TransferWHID"];
                this.columnRedeemWHID = base.Columns["RedeemWHID"];
                this.columnAmount = base.Columns["Amount"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnCreateUserID = base.Columns["CreateUserID"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnTransferUserID = base.Columns["TransferUserID"];
                this.columnTransferDate = base.Columns["TransferDate"];
                this.columnUpdateUserID = base.Columns["UpdateUserID"];
                this.columnUpdateDate = base.Columns["UpdateDate"];
                this.columnStatus = base.Columns["Status"];
                this.columnVenderTranID = base.Columns["VenderTranID"];
                this.columnVenderTranNo = base.Columns["VenderTranNo"];
                this.columnVenderTranDate = base.Columns["VenderTranDate"];
                this.columnTranSide = base.Columns["TranSide"];
                this.columnType = base.Columns["Type"];
                this.columnFromVenderID = base.Columns["FromVenderID"];
                this.columnToVenderID = base.Columns["ToVenderID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMoneyReceiptID = new global::System.Data.DataColumn("MoneyReceiptID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneyReceiptID);
                this.columnMoneyReceiptNo = new global::System.Data.DataColumn("MoneyReceiptNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneyReceiptNo);
                this.columnJobID = new global::System.Data.DataColumn("JobID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobID);
                this.columnCreateWHID = new global::System.Data.DataColumn("CreateWHID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateWHID);
                this.columnTransferWHID = new global::System.Data.DataColumn("TransferWHID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferWHID);
                this.columnRedeemWHID = new global::System.Data.DataColumn("RedeemWHID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRedeemWHID);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnCreateUserID = new global::System.Data.DataColumn("CreateUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateUserID);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnTransferUserID = new global::System.Data.DataColumn("TransferUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferUserID);
                this.columnTransferDate = new global::System.Data.DataColumn("TransferDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferDate);
                this.columnUpdateUserID = new global::System.Data.DataColumn("UpdateUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUserID);
                this.columnUpdateDate = new global::System.Data.DataColumn("UpdateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDate);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnVenderTranID = new global::System.Data.DataColumn("VenderTranID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVenderTranID);
                this.columnVenderTranNo = new global::System.Data.DataColumn("VenderTranNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVenderTranNo);
                this.columnVenderTranDate = new global::System.Data.DataColumn("VenderTranDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVenderTranDate);
                this.columnTranSide = new global::System.Data.DataColumn("TranSide", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTranSide);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnFromVenderID = new global::System.Data.DataColumn("FromVenderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromVenderID);
                this.columnToVenderID = new global::System.Data.DataColumn("ToVenderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToVenderID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferMRRow NewExchangeOfferMRRow() {
                return ((ExchangeOfferMRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExchangeOfferMRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ExchangeOfferMRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExchangeOfferMRRowChanged != null)) {
                    this.ExchangeOfferMRRowChanged(this, new ExchangeOfferMRRowChangeEvent(((ExchangeOfferMRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExchangeOfferMRRowChanging != null)) {
                    this.ExchangeOfferMRRowChanging(this, new ExchangeOfferMRRowChangeEvent(((ExchangeOfferMRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExchangeOfferMRRowDeleted != null)) {
                    this.ExchangeOfferMRRowDeleted(this, new ExchangeOfferMRRowChangeEvent(((ExchangeOfferMRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExchangeOfferMRRowDeleting != null)) {
                    this.ExchangeOfferMRRowDeleting(this, new ExchangeOfferMRRowChangeEvent(((ExchangeOfferMRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveExchangeOfferMRRow(ExchangeOfferMRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSExchangeOfferMR ds = new DSExchangeOfferMR();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExchangeOfferMRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ExchangeOfferMRRow : global::System.Data.DataRow {
            
            private ExchangeOfferMRDataTable tableExchangeOfferMR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExchangeOfferMRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExchangeOfferMR = ((ExchangeOfferMRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MoneyReceiptID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.MoneyReceiptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneyReceiptID\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.MoneyReceiptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneyReceiptNo {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferMR.MoneyReceiptNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneyReceiptNo\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.MoneyReceiptNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JobID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.JobIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobID\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.JobIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreateWHID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.CreateWHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateWHID\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.CreateWHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TransferWHID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.TransferWHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferWHID\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.TransferWHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RedeemWHID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.RedeemWHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RedeemWHID\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.RedeemWHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Amount {
                get {
                    try {
                        return ((double)(this[this.tableExchangeOfferMR.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferMR.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreateUserID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.CreateUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateUserID\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.CreateUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExchangeOfferMR.CreateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateDate\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TransferUserID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.TransferUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferUserID\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.TransferUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TransferDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExchangeOfferMR.TransferDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferDate\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.TransferDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdateUserID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.UpdateUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateUserID\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.UpdateUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UpdateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExchangeOfferMR.UpdateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateDate\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.UpdateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Status {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VenderTranID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.VenderTranIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VenderTranID\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.VenderTranIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VenderTranNo {
                get {
                    try {
                        return ((string)(this[this.tableExchangeOfferMR.VenderTranNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VenderTranNo\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.VenderTranNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VenderTranDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExchangeOfferMR.VenderTranDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VenderTranDate\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.VenderTranDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TranSide {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.TranSideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TranSide\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.TranSideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Type {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FromVenderID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.FromVenderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromVenderID\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.FromVenderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ToVenderID {
                get {
                    try {
                        return ((int)(this[this.tableExchangeOfferMR.ToVenderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToVenderID\' in table \'ExchangeOfferMR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExchangeOfferMR.ToVenderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneyReceiptIDNull() {
                return this.IsNull(this.tableExchangeOfferMR.MoneyReceiptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneyReceiptIDNull() {
                this[this.tableExchangeOfferMR.MoneyReceiptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneyReceiptNoNull() {
                return this.IsNull(this.tableExchangeOfferMR.MoneyReceiptNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneyReceiptNoNull() {
                this[this.tableExchangeOfferMR.MoneyReceiptNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobIDNull() {
                return this.IsNull(this.tableExchangeOfferMR.JobIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobIDNull() {
                this[this.tableExchangeOfferMR.JobIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreateWHIDNull() {
                return this.IsNull(this.tableExchangeOfferMR.CreateWHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreateWHIDNull() {
                this[this.tableExchangeOfferMR.CreateWHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransferWHIDNull() {
                return this.IsNull(this.tableExchangeOfferMR.TransferWHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransferWHIDNull() {
                this[this.tableExchangeOfferMR.TransferWHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRedeemWHIDNull() {
                return this.IsNull(this.tableExchangeOfferMR.RedeemWHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRedeemWHIDNull() {
                this[this.tableExchangeOfferMR.RedeemWHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableExchangeOfferMR.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableExchangeOfferMR.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableExchangeOfferMR.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableExchangeOfferMR.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreateUserIDNull() {
                return this.IsNull(this.tableExchangeOfferMR.CreateUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreateUserIDNull() {
                this[this.tableExchangeOfferMR.CreateUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreateDateNull() {
                return this.IsNull(this.tableExchangeOfferMR.CreateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreateDateNull() {
                this[this.tableExchangeOfferMR.CreateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransferUserIDNull() {
                return this.IsNull(this.tableExchangeOfferMR.TransferUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransferUserIDNull() {
                this[this.tableExchangeOfferMR.TransferUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransferDateNull() {
                return this.IsNull(this.tableExchangeOfferMR.TransferDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransferDateNull() {
                this[this.tableExchangeOfferMR.TransferDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateUserIDNull() {
                return this.IsNull(this.tableExchangeOfferMR.UpdateUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateUserIDNull() {
                this[this.tableExchangeOfferMR.UpdateUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateDateNull() {
                return this.IsNull(this.tableExchangeOfferMR.UpdateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateDateNull() {
                this[this.tableExchangeOfferMR.UpdateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableExchangeOfferMR.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableExchangeOfferMR.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVenderTranIDNull() {
                return this.IsNull(this.tableExchangeOfferMR.VenderTranIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVenderTranIDNull() {
                this[this.tableExchangeOfferMR.VenderTranIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVenderTranNoNull() {
                return this.IsNull(this.tableExchangeOfferMR.VenderTranNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVenderTranNoNull() {
                this[this.tableExchangeOfferMR.VenderTranNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVenderTranDateNull() {
                return this.IsNull(this.tableExchangeOfferMR.VenderTranDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVenderTranDateNull() {
                this[this.tableExchangeOfferMR.VenderTranDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTranSideNull() {
                return this.IsNull(this.tableExchangeOfferMR.TranSideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTranSideNull() {
                this[this.tableExchangeOfferMR.TranSideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableExchangeOfferMR.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableExchangeOfferMR.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromVenderIDNull() {
                return this.IsNull(this.tableExchangeOfferMR.FromVenderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromVenderIDNull() {
                this[this.tableExchangeOfferMR.FromVenderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToVenderIDNull() {
                return this.IsNull(this.tableExchangeOfferMR.ToVenderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToVenderIDNull() {
                this[this.tableExchangeOfferMR.ToVenderIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ExchangeOfferMRRowChangeEvent : global::System.EventArgs {
            
            private ExchangeOfferMRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferMRRowChangeEvent(ExchangeOfferMRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExchangeOfferMRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591