//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TEL.SMS.BO.BE {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DSSMSMessage")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSSMSMessage : System.Data.DataSet {
        
        private SMSMessageDataTable tableSMSMessage;
        
        private SMSMessageGroupDataTable tableSMSMessageGroup;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSSMSMessage() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSSMSMessage(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["SMSMessage"] != null)) {
                    base.Tables.Add(new SMSMessageDataTable(ds.Tables["SMSMessage"]));
                }
                if ((ds.Tables["SMSMessageGroup"] != null)) {
                    base.Tables.Add(new SMSMessageGroupDataTable(ds.Tables["SMSMessageGroup"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SMSMessageDataTable SMSMessage {
            get {
                return this.tableSMSMessage;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SMSMessageGroupDataTable SMSMessageGroup {
            get {
                return this.tableSMSMessageGroup;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DSSMSMessage cln = ((DSSMSMessage)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SMSMessage"] != null)) {
                    base.Tables.Add(new SMSMessageDataTable(ds.Tables["SMSMessage"]));
                }
                if ((ds.Tables["SMSMessageGroup"] != null)) {
                    base.Tables.Add(new SMSMessageGroupDataTable(ds.Tables["SMSMessageGroup"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSMSMessage = ((SMSMessageDataTable)(base.Tables["SMSMessage"]));
            if ((initTable == true)) {
                if ((this.tableSMSMessage != null)) {
                    this.tableSMSMessage.InitVars();
                }
            }
            this.tableSMSMessageGroup = ((SMSMessageGroupDataTable)(base.Tables["SMSMessageGroup"]));
            if ((initTable == true)) {
                if ((this.tableSMSMessageGroup != null)) {
                    this.tableSMSMessageGroup.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSSMSMessage";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSSMSMessage.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSMSMessage = new SMSMessageDataTable();
            base.Tables.Add(this.tableSMSMessage);
            this.tableSMSMessageGroup = new SMSMessageGroupDataTable();
            base.Tables.Add(this.tableSMSMessageGroup);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSMSMessage() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSMSMessageGroup() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DSSMSMessage ds = new DSSMSMessage();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void SMSMessageRowChangeEventHandler(object sender, SMSMessageRowChangeEvent e);
        
        public delegate void SMSMessageGroupRowChangeEventHandler(object sender, SMSMessageGroupRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SMSMessageDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSMSMessageID;
            
            private System.Data.DataColumn columnRequestDate;
            
            private System.Data.DataColumn columnSMSText;
            
            private System.Data.DataColumn columnSMSType;
            
            private System.Data.DataColumn columnSingleMobileNo;
            
            private System.Data.DataColumn columnSendDate;
            
            private System.Data.DataColumn columnStatus;
            
            private System.Data.DataColumn columnSubmittedBy;
            
            private System.Data.DataColumn columnUserGroupName;
            
            private System.Data.DataColumn columnSuccessCount;
            
            private System.Data.DataColumn columnFailCount;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSMessageDataTable() {
                this.TableName = "SMSMessage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SMSMessageDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SMSMessageDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SMSMessageIDColumn {
                get {
                    return this.columnSMSMessageID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RequestDateColumn {
                get {
                    return this.columnRequestDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SMSTextColumn {
                get {
                    return this.columnSMSText;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SMSTypeColumn {
                get {
                    return this.columnSMSType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SingleMobileNoColumn {
                get {
                    return this.columnSingleMobileNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SendDateColumn {
                get {
                    return this.columnSendDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SubmittedByColumn {
                get {
                    return this.columnSubmittedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserGroupNameColumn {
                get {
                    return this.columnUserGroupName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SuccessCountColumn {
                get {
                    return this.columnSuccessCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FailCountColumn {
                get {
                    return this.columnFailCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSMessageRow this[int index] {
                get {
                    return ((SMSMessageRow)(this.Rows[index]));
                }
            }
            
            public event SMSMessageRowChangeEventHandler SMSMessageRowChanging;
            
            public event SMSMessageRowChangeEventHandler SMSMessageRowChanged;
            
            public event SMSMessageRowChangeEventHandler SMSMessageRowDeleting;
            
            public event SMSMessageRowChangeEventHandler SMSMessageRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSMSMessageRow(SMSMessageRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSMessageRow AddSMSMessageRow(long SMSMessageID, System.DateTime RequestDate, string SMSText, long SMSType, string SingleMobileNo, System.DateTime SendDate, long Status, string SubmittedBy, string UserGroupName, long SuccessCount, long FailCount) {
                SMSMessageRow rowSMSMessageRow = ((SMSMessageRow)(this.NewRow()));
                rowSMSMessageRow.ItemArray = new object[] {
                        SMSMessageID,
                        RequestDate,
                        SMSText,
                        SMSType,
                        SingleMobileNo,
                        SendDate,
                        Status,
                        SubmittedBy,
                        UserGroupName,
                        SuccessCount,
                        FailCount};
                this.Rows.Add(rowSMSMessageRow);
                return rowSMSMessageRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                SMSMessageDataTable cln = ((SMSMessageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new SMSMessageDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSMSMessageID = base.Columns["SMSMessageID"];
                this.columnRequestDate = base.Columns["RequestDate"];
                this.columnSMSText = base.Columns["SMSText"];
                this.columnSMSType = base.Columns["SMSType"];
                this.columnSingleMobileNo = base.Columns["SingleMobileNo"];
                this.columnSendDate = base.Columns["SendDate"];
                this.columnStatus = base.Columns["Status"];
                this.columnSubmittedBy = base.Columns["SubmittedBy"];
                this.columnUserGroupName = base.Columns["UserGroupName"];
                this.columnSuccessCount = base.Columns["SuccessCount"];
                this.columnFailCount = base.Columns["FailCount"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSMSMessageID = new System.Data.DataColumn("SMSMessageID", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMSMessageID);
                this.columnRequestDate = new System.Data.DataColumn("RequestDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestDate);
                this.columnSMSText = new System.Data.DataColumn("SMSText", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMSText);
                this.columnSMSType = new System.Data.DataColumn("SMSType", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMSType);
                this.columnSingleMobileNo = new System.Data.DataColumn("SingleMobileNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSingleMobileNo);
                this.columnSendDate = new System.Data.DataColumn("SendDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSendDate);
                this.columnStatus = new System.Data.DataColumn("Status", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnSubmittedBy = new System.Data.DataColumn("SubmittedBy", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmittedBy);
                this.columnUserGroupName = new System.Data.DataColumn("UserGroupName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserGroupName);
                this.columnSuccessCount = new System.Data.DataColumn("SuccessCount", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuccessCount);
                this.columnFailCount = new System.Data.DataColumn("FailCount", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFailCount);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSMessageRow NewSMSMessageRow() {
                return ((SMSMessageRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new SMSMessageRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(SMSMessageRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SMSMessageRowChanged != null)) {
                    this.SMSMessageRowChanged(this, new SMSMessageRowChangeEvent(((SMSMessageRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SMSMessageRowChanging != null)) {
                    this.SMSMessageRowChanging(this, new SMSMessageRowChangeEvent(((SMSMessageRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SMSMessageRowDeleted != null)) {
                    this.SMSMessageRowDeleted(this, new SMSMessageRowChangeEvent(((SMSMessageRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SMSMessageRowDeleting != null)) {
                    this.SMSMessageRowDeleting(this, new SMSMessageRowChangeEvent(((SMSMessageRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSMSMessageRow(SMSMessageRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DSSMSMessage ds = new DSSMSMessage();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SMSMessageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SMSMessageGroupDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSMSMessageID;
            
            private System.Data.DataColumn columnSMSGroupID;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSMessageGroupDataTable() {
                this.TableName = "SMSMessageGroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SMSMessageGroupDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SMSMessageGroupDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SMSMessageIDColumn {
                get {
                    return this.columnSMSMessageID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SMSGroupIDColumn {
                get {
                    return this.columnSMSGroupID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSMessageGroupRow this[int index] {
                get {
                    return ((SMSMessageGroupRow)(this.Rows[index]));
                }
            }
            
            public event SMSMessageGroupRowChangeEventHandler SMSMessageGroupRowChanging;
            
            public event SMSMessageGroupRowChangeEventHandler SMSMessageGroupRowChanged;
            
            public event SMSMessageGroupRowChangeEventHandler SMSMessageGroupRowDeleting;
            
            public event SMSMessageGroupRowChangeEventHandler SMSMessageGroupRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSMSMessageGroupRow(SMSMessageGroupRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSMessageGroupRow AddSMSMessageGroupRow(long SMSMessageID, long SMSGroupID) {
                SMSMessageGroupRow rowSMSMessageGroupRow = ((SMSMessageGroupRow)(this.NewRow()));
                rowSMSMessageGroupRow.ItemArray = new object[] {
                        SMSMessageID,
                        SMSGroupID};
                this.Rows.Add(rowSMSMessageGroupRow);
                return rowSMSMessageGroupRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                SMSMessageGroupDataTable cln = ((SMSMessageGroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new SMSMessageGroupDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSMSMessageID = base.Columns["SMSMessageID"];
                this.columnSMSGroupID = base.Columns["SMSGroupID"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSMSMessageID = new System.Data.DataColumn("SMSMessageID", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMSMessageID);
                this.columnSMSGroupID = new System.Data.DataColumn("SMSGroupID", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMSGroupID);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSMessageGroupRow NewSMSMessageGroupRow() {
                return ((SMSMessageGroupRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new SMSMessageGroupRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(SMSMessageGroupRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SMSMessageGroupRowChanged != null)) {
                    this.SMSMessageGroupRowChanged(this, new SMSMessageGroupRowChangeEvent(((SMSMessageGroupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SMSMessageGroupRowChanging != null)) {
                    this.SMSMessageGroupRowChanging(this, new SMSMessageGroupRowChangeEvent(((SMSMessageGroupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SMSMessageGroupRowDeleted != null)) {
                    this.SMSMessageGroupRowDeleted(this, new SMSMessageGroupRowChangeEvent(((SMSMessageGroupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SMSMessageGroupRowDeleting != null)) {
                    this.SMSMessageGroupRowDeleting(this, new SMSMessageGroupRowChangeEvent(((SMSMessageGroupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSMSMessageGroupRow(SMSMessageGroupRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DSSMSMessage ds = new DSSMSMessage();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SMSMessageGroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SMSMessageRow : System.Data.DataRow {
            
            private SMSMessageDataTable tableSMSMessage;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SMSMessageRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSMSMessage = ((SMSMessageDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SMSMessageID {
                get {
                    try {
                        return ((long)(this[this.tableSMSMessage.SMSMessageIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SMSMessageID\' in table \'SMSMessage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSMessage.SMSMessageIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RequestDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSMSMessage.RequestDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RequestDate\' in table \'SMSMessage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSMessage.RequestDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SMSText {
                get {
                    try {
                        return ((string)(this[this.tableSMSMessage.SMSTextColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SMSText\' in table \'SMSMessage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSMessage.SMSTextColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SMSType {
                get {
                    try {
                        return ((long)(this[this.tableSMSMessage.SMSTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SMSType\' in table \'SMSMessage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSMessage.SMSTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SingleMobileNo {
                get {
                    try {
                        return ((string)(this[this.tableSMSMessage.SingleMobileNoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SingleMobileNo\' in table \'SMSMessage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSMessage.SingleMobileNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SendDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSMSMessage.SendDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SendDate\' in table \'SMSMessage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSMessage.SendDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Status {
                get {
                    try {
                        return ((long)(this[this.tableSMSMessage.StatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Status\' in table \'SMSMessage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSMessage.StatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubmittedBy {
                get {
                    try {
                        return ((string)(this[this.tableSMSMessage.SubmittedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SubmittedBy\' in table \'SMSMessage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSMessage.SubmittedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserGroupName {
                get {
                    try {
                        return ((string)(this[this.tableSMSMessage.UserGroupNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UserGroupName\' in table \'SMSMessage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSMessage.UserGroupNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SuccessCount {
                get {
                    try {
                        return ((long)(this[this.tableSMSMessage.SuccessCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SuccessCount\' in table \'SMSMessage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSMessage.SuccessCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FailCount {
                get {
                    try {
                        return ((long)(this[this.tableSMSMessage.FailCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FailCount\' in table \'SMSMessage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSMessage.FailCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMSMessageIDNull() {
                return this.IsNull(this.tableSMSMessage.SMSMessageIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMSMessageIDNull() {
                this[this.tableSMSMessage.SMSMessageIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestDateNull() {
                return this.IsNull(this.tableSMSMessage.RequestDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestDateNull() {
                this[this.tableSMSMessage.RequestDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMSTextNull() {
                return this.IsNull(this.tableSMSMessage.SMSTextColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMSTextNull() {
                this[this.tableSMSMessage.SMSTextColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMSTypeNull() {
                return this.IsNull(this.tableSMSMessage.SMSTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMSTypeNull() {
                this[this.tableSMSMessage.SMSTypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSingleMobileNoNull() {
                return this.IsNull(this.tableSMSMessage.SingleMobileNoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSingleMobileNoNull() {
                this[this.tableSMSMessage.SingleMobileNoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSendDateNull() {
                return this.IsNull(this.tableSMSMessage.SendDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSendDateNull() {
                this[this.tableSMSMessage.SendDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableSMSMessage.StatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableSMSMessage.StatusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubmittedByNull() {
                return this.IsNull(this.tableSMSMessage.SubmittedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubmittedByNull() {
                this[this.tableSMSMessage.SubmittedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserGroupNameNull() {
                return this.IsNull(this.tableSMSMessage.UserGroupNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserGroupNameNull() {
                this[this.tableSMSMessage.UserGroupNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuccessCountNull() {
                return this.IsNull(this.tableSMSMessage.SuccessCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuccessCountNull() {
                this[this.tableSMSMessage.SuccessCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFailCountNull() {
                return this.IsNull(this.tableSMSMessage.FailCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFailCountNull() {
                this[this.tableSMSMessage.FailCountColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SMSMessageGroupRow : System.Data.DataRow {
            
            private SMSMessageGroupDataTable tableSMSMessageGroup;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SMSMessageGroupRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSMSMessageGroup = ((SMSMessageGroupDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SMSMessageID {
                get {
                    try {
                        return ((long)(this[this.tableSMSMessageGroup.SMSMessageIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SMSMessageID\' in table \'SMSMessageGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSMessageGroup.SMSMessageIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SMSGroupID {
                get {
                    try {
                        return ((long)(this[this.tableSMSMessageGroup.SMSGroupIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SMSGroupID\' in table \'SMSMessageGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSMessageGroup.SMSGroupIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMSMessageIDNull() {
                return this.IsNull(this.tableSMSMessageGroup.SMSMessageIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMSMessageIDNull() {
                this[this.tableSMSMessageGroup.SMSMessageIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMSGroupIDNull() {
                return this.IsNull(this.tableSMSMessageGroup.SMSGroupIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMSGroupIDNull() {
                this[this.tableSMSMessageGroup.SMSGroupIDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SMSMessageRowChangeEvent : System.EventArgs {
            
            private SMSMessageRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSMessageRowChangeEvent(SMSMessageRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSMessageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SMSMessageGroupRowChangeEvent : System.EventArgs {
            
            private SMSMessageGroupRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSMessageGroupRowChangeEvent(SMSMessageGroupRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSMessageGroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591