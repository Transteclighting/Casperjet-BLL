//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TEL.SMS.BO.BE {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DSSMSDailySalesCollection")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSSMSDailySalesCollection : System.Data.DataSet {
        
        private SMSDailySalesCollectionDataTable tableSMSDailySalesCollection;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSSMSDailySalesCollection() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSSMSDailySalesCollection(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["SMSDailySalesCollection"] != null)) {
                    base.Tables.Add(new SMSDailySalesCollectionDataTable(ds.Tables["SMSDailySalesCollection"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SMSDailySalesCollectionDataTable SMSDailySalesCollection {
            get {
                return this.tableSMSDailySalesCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DSSMSDailySalesCollection cln = ((DSSMSDailySalesCollection)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SMSDailySalesCollection"] != null)) {
                    base.Tables.Add(new SMSDailySalesCollectionDataTable(ds.Tables["SMSDailySalesCollection"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSMSDailySalesCollection = ((SMSDailySalesCollectionDataTable)(base.Tables["SMSDailySalesCollection"]));
            if ((initTable == true)) {
                if ((this.tableSMSDailySalesCollection != null)) {
                    this.tableSMSDailySalesCollection.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSSMSDailySalesCollection";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSSMSDailySalesCollection.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSMSDailySalesCollection = new SMSDailySalesCollectionDataTable();
            base.Tables.Add(this.tableSMSDailySalesCollection);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSMSDailySalesCollection() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DSSMSDailySalesCollection ds = new DSSMSDailySalesCollection();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void SMSDailySalesCollectionRowChangeEventHandler(object sender, SMSDailySalesCollectionRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SMSDailySalesCollectionDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnCustomerCode;
            
            private System.Data.DataColumn columnCustomerName;
            
            private System.Data.DataColumn columnPersonName;
            
            private System.Data.DataColumn columnMobileNo;
            
            private System.Data.DataColumn columnSales;
            
            private System.Data.DataColumn columnCollection;
            
            private System.Data.DataColumn columnTradePromotion;
            
            private System.Data.DataColumn columnSellingExpense;
            
            private System.Data.DataColumn columnReplacement;
            
            private System.Data.DataColumn columnTranDate;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSDailySalesCollectionDataTable() {
                this.TableName = "SMSDailySalesCollection";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SMSDailySalesCollectionDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SMSDailySalesCollectionDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PersonNameColumn {
                get {
                    return this.columnPersonName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SalesColumn {
                get {
                    return this.columnSales;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CollectionColumn {
                get {
                    return this.columnCollection;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TradePromotionColumn {
                get {
                    return this.columnTradePromotion;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SellingExpenseColumn {
                get {
                    return this.columnSellingExpense;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReplacementColumn {
                get {
                    return this.columnReplacement;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TranDateColumn {
                get {
                    return this.columnTranDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSDailySalesCollectionRow this[int index] {
                get {
                    return ((SMSDailySalesCollectionRow)(this.Rows[index]));
                }
            }
            
            public event SMSDailySalesCollectionRowChangeEventHandler SMSDailySalesCollectionRowChanging;
            
            public event SMSDailySalesCollectionRowChangeEventHandler SMSDailySalesCollectionRowChanged;
            
            public event SMSDailySalesCollectionRowChangeEventHandler SMSDailySalesCollectionRowDeleting;
            
            public event SMSDailySalesCollectionRowChangeEventHandler SMSDailySalesCollectionRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSMSDailySalesCollectionRow(SMSDailySalesCollectionRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSDailySalesCollectionRow AddSMSDailySalesCollectionRow(string CustomerCode, string CustomerName, string PersonName, string MobileNo, double Sales, double Collection, double TradePromotion, double SellingExpense, double Replacement, System.DateTime TranDate) {
                SMSDailySalesCollectionRow rowSMSDailySalesCollectionRow = ((SMSDailySalesCollectionRow)(this.NewRow()));
                rowSMSDailySalesCollectionRow.ItemArray = new object[] {
                        CustomerCode,
                        CustomerName,
                        PersonName,
                        MobileNo,
                        Sales,
                        Collection,
                        TradePromotion,
                        SellingExpense,
                        Replacement,
                        TranDate};
                this.Rows.Add(rowSMSDailySalesCollectionRow);
                return rowSMSDailySalesCollectionRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                SMSDailySalesCollectionDataTable cln = ((SMSDailySalesCollectionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new SMSDailySalesCollectionDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnPersonName = base.Columns["PersonName"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnSales = base.Columns["Sales"];
                this.columnCollection = base.Columns["Collection"];
                this.columnTradePromotion = base.Columns["TradePromotion"];
                this.columnSellingExpense = base.Columns["SellingExpense"];
                this.columnReplacement = base.Columns["Replacement"];
                this.columnTranDate = base.Columns["TranDate"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomerCode = new System.Data.DataColumn("CustomerCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerName = new System.Data.DataColumn("CustomerName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnPersonName = new System.Data.DataColumn("PersonName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonName);
                this.columnMobileNo = new System.Data.DataColumn("MobileNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnSales = new System.Data.DataColumn("Sales", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales);
                this.columnCollection = new System.Data.DataColumn("Collection", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollection);
                this.columnTradePromotion = new System.Data.DataColumn("TradePromotion", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradePromotion);
                this.columnSellingExpense = new System.Data.DataColumn("SellingExpense", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellingExpense);
                this.columnReplacement = new System.Data.DataColumn("Replacement", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReplacement);
                this.columnTranDate = new System.Data.DataColumn("TranDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTranDate);
                this.columnCustomerCode.MaxLength = 50;
                this.columnCustomerName.MaxLength = 255;
                this.columnPersonName.MaxLength = 100;
                this.columnMobileNo.AllowDBNull = false;
                this.columnMobileNo.MaxLength = 50;
                this.columnSales.AllowDBNull = false;
                this.columnSales.Caption = "Target";
                this.columnCollection.AllowDBNull = false;
                this.columnCollection.Caption = "Sales";
                this.columnTradePromotion.AllowDBNull = false;
                this.columnTradePromotion.Caption = "CollectionElectrical";
                this.columnSellingExpense.AllowDBNull = false;
                this.columnSellingExpense.Caption = "CollectionGrocery";
                this.columnTranDate.AllowDBNull = false;
                this.columnTranDate.Caption = "Date";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSDailySalesCollectionRow NewSMSDailySalesCollectionRow() {
                return ((SMSDailySalesCollectionRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new SMSDailySalesCollectionRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(SMSDailySalesCollectionRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SMSDailySalesCollectionRowChanged != null)) {
                    this.SMSDailySalesCollectionRowChanged(this, new SMSDailySalesCollectionRowChangeEvent(((SMSDailySalesCollectionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SMSDailySalesCollectionRowChanging != null)) {
                    this.SMSDailySalesCollectionRowChanging(this, new SMSDailySalesCollectionRowChangeEvent(((SMSDailySalesCollectionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SMSDailySalesCollectionRowDeleted != null)) {
                    this.SMSDailySalesCollectionRowDeleted(this, new SMSDailySalesCollectionRowChangeEvent(((SMSDailySalesCollectionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SMSDailySalesCollectionRowDeleting != null)) {
                    this.SMSDailySalesCollectionRowDeleting(this, new SMSDailySalesCollectionRowChangeEvent(((SMSDailySalesCollectionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSMSDailySalesCollectionRow(SMSDailySalesCollectionRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DSSMSDailySalesCollection ds = new DSSMSDailySalesCollection();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SMSDailySalesCollectionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SMSDailySalesCollectionRow : System.Data.DataRow {
            
            private SMSDailySalesCollectionDataTable tableSMSDailySalesCollection;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SMSDailySalesCollectionRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSMSDailySalesCollection = ((SMSDailySalesCollectionDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableSMSDailySalesCollection.CustomerCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CustomerCode\' in table \'SMSDailySalesCollection\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSMSDailySalesCollection.CustomerCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableSMSDailySalesCollection.CustomerNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'SMSDailySalesCollection\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSMSDailySalesCollection.CustomerNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PersonName {
                get {
                    try {
                        return ((string)(this[this.tableSMSDailySalesCollection.PersonNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PersonName\' in table \'SMSDailySalesCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSDailySalesCollection.PersonNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobileNo {
                get {
                    return ((string)(this[this.tableSMSDailySalesCollection.MobileNoColumn]));
                }
                set {
                    this[this.tableSMSDailySalesCollection.MobileNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Sales {
                get {
                    return ((double)(this[this.tableSMSDailySalesCollection.SalesColumn]));
                }
                set {
                    this[this.tableSMSDailySalesCollection.SalesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Collection {
                get {
                    return ((double)(this[this.tableSMSDailySalesCollection.CollectionColumn]));
                }
                set {
                    this[this.tableSMSDailySalesCollection.CollectionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TradePromotion {
                get {
                    return ((double)(this[this.tableSMSDailySalesCollection.TradePromotionColumn]));
                }
                set {
                    this[this.tableSMSDailySalesCollection.TradePromotionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SellingExpense {
                get {
                    return ((double)(this[this.tableSMSDailySalesCollection.SellingExpenseColumn]));
                }
                set {
                    this[this.tableSMSDailySalesCollection.SellingExpenseColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Replacement {
                get {
                    try {
                        return ((double)(this[this.tableSMSDailySalesCollection.ReplacementColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Replacement\' in table \'SMSDailySalesCollection\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSMSDailySalesCollection.ReplacementColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TranDate {
                get {
                    return ((System.DateTime)(this[this.tableSMSDailySalesCollection.TranDateColumn]));
                }
                set {
                    this[this.tableSMSDailySalesCollection.TranDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableSMSDailySalesCollection.CustomerCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableSMSDailySalesCollection.CustomerCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableSMSDailySalesCollection.CustomerNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableSMSDailySalesCollection.CustomerNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonNameNull() {
                return this.IsNull(this.tableSMSDailySalesCollection.PersonNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonNameNull() {
                this[this.tableSMSDailySalesCollection.PersonNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReplacementNull() {
                return this.IsNull(this.tableSMSDailySalesCollection.ReplacementColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReplacementNull() {
                this[this.tableSMSDailySalesCollection.ReplacementColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SMSDailySalesCollectionRowChangeEvent : System.EventArgs {
            
            private SMSDailySalesCollectionRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSDailySalesCollectionRowChangeEvent(SMSDailySalesCollectionRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SMSDailySalesCollectionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591