//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TEL.SMS.BO.BE {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DSRptWarrantyAct")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSRptWarrantyAct : System.Data.DataSet {
        
        private RptWarrantyActDataTable tableRptWarrantyAct;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSRptWarrantyAct() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSRptWarrantyAct(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["RptWarrantyAct"] != null)) {
                    base.Tables.Add(new RptWarrantyActDataTable(ds.Tables["RptWarrantyAct"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RptWarrantyActDataTable RptWarrantyAct {
            get {
                return this.tableRptWarrantyAct;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DSRptWarrantyAct cln = ((DSRptWarrantyAct)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["RptWarrantyAct"] != null)) {
                    base.Tables.Add(new RptWarrantyActDataTable(ds.Tables["RptWarrantyAct"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableRptWarrantyAct = ((RptWarrantyActDataTable)(base.Tables["RptWarrantyAct"]));
            if ((initTable == true)) {
                if ((this.tableRptWarrantyAct != null)) {
                    this.tableRptWarrantyAct.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSRptWarrantyAct";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSRptWarrantyAct.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableRptWarrantyAct = new RptWarrantyActDataTable();
            base.Tables.Add(this.tableRptWarrantyAct);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRptWarrantyAct() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DSRptWarrantyAct ds = new DSRptWarrantyAct();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void RptWarrantyActRowChangeEventHandler(object sender, RptWarrantyActRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RptWarrantyActDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnWarrantyRegID;
            
            private System.Data.DataColumn columnCustomerCode;
            
            private System.Data.DataColumn columnCustomerName;
            
            private System.Data.DataColumn columnCustomerAddress;
            
            private System.Data.DataColumn columnTelephoneNo;
            
            private System.Data.DataColumn columnMobileNo;
            
            private System.Data.DataColumn columnEmail;
            
            private System.Data.DataColumn columnSalesPersonID;
            
            private System.Data.DataColumn columnPurchaseDate;
            
            private System.Data.DataColumn columnProductID;
            
            private System.Data.DataColumn columnSerialNo;
            
            private System.Data.DataColumn columnSellerName;
            
            private System.Data.DataColumn columnBillNo;
            
            private System.Data.DataColumn columnRemarks;
            
            private System.Data.DataColumn columnEntryDate;
            
            private System.Data.DataColumn columnUserName;
            
            private System.Data.DataColumn columnRegMode;
            
            private System.Data.DataColumn columnProductDesc;
            
            private System.Data.DataColumn columnShowroomName;
            
            private System.Data.DataColumn columnSellerCode;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RptWarrantyActDataTable() {
                this.TableName = "RptWarrantyAct";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RptWarrantyActDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RptWarrantyActDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WarrantyRegIDColumn {
                get {
                    return this.columnWarrantyRegID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CustomerAddressColumn {
                get {
                    return this.columnCustomerAddress;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TelephoneNoColumn {
                get {
                    return this.columnTelephoneNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SalesPersonIDColumn {
                get {
                    return this.columnSalesPersonID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PurchaseDateColumn {
                get {
                    return this.columnPurchaseDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SerialNoColumn {
                get {
                    return this.columnSerialNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SellerNameColumn {
                get {
                    return this.columnSellerName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BillNoColumn {
                get {
                    return this.columnBillNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EntryDateColumn {
                get {
                    return this.columnEntryDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RegModeColumn {
                get {
                    return this.columnRegMode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProductDescColumn {
                get {
                    return this.columnProductDesc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ShowroomNameColumn {
                get {
                    return this.columnShowroomName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SellerCodeColumn {
                get {
                    return this.columnSellerCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RptWarrantyActRow this[int index] {
                get {
                    return ((RptWarrantyActRow)(this.Rows[index]));
                }
            }
            
            public event RptWarrantyActRowChangeEventHandler RptWarrantyActRowChanging;
            
            public event RptWarrantyActRowChangeEventHandler RptWarrantyActRowChanged;
            
            public event RptWarrantyActRowChangeEventHandler RptWarrantyActRowDeleting;
            
            public event RptWarrantyActRowChangeEventHandler RptWarrantyActRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRptWarrantyActRow(RptWarrantyActRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RptWarrantyActRow AddRptWarrantyActRow(
                        long WarrantyRegID, 
                        string CustomerCode, 
                        string CustomerName, 
                        string CustomerAddress, 
                        string TelephoneNo, 
                        string MobileNo, 
                        string Email, 
                        string SalesPersonID, 
                        System.DateTime PurchaseDate, 
                        long ProductID, 
                        string SerialNo, 
                        string SellerName, 
                        string BillNo, 
                        string Remarks, 
                        System.DateTime EntryDate, 
                        string UserName, 
                        long RegMode, 
                        string ProductDesc, 
                        string ShowroomName, 
                        string SellerCode) {
                RptWarrantyActRow rowRptWarrantyActRow = ((RptWarrantyActRow)(this.NewRow()));
                rowRptWarrantyActRow.ItemArray = new object[] {
                        WarrantyRegID,
                        CustomerCode,
                        CustomerName,
                        CustomerAddress,
                        TelephoneNo,
                        MobileNo,
                        Email,
                        SalesPersonID,
                        PurchaseDate,
                        ProductID,
                        SerialNo,
                        SellerName,
                        BillNo,
                        Remarks,
                        EntryDate,
                        UserName,
                        RegMode,
                        ProductDesc,
                        ShowroomName,
                        SellerCode};
                this.Rows.Add(rowRptWarrantyActRow);
                return rowRptWarrantyActRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                RptWarrantyActDataTable cln = ((RptWarrantyActDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new RptWarrantyActDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWarrantyRegID = base.Columns["WarrantyRegID"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerAddress = base.Columns["CustomerAddress"];
                this.columnTelephoneNo = base.Columns["TelephoneNo"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnEmail = base.Columns["Email"];
                this.columnSalesPersonID = base.Columns["SalesPersonID"];
                this.columnPurchaseDate = base.Columns["PurchaseDate"];
                this.columnProductID = base.Columns["ProductID"];
                this.columnSerialNo = base.Columns["SerialNo"];
                this.columnSellerName = base.Columns["SellerName"];
                this.columnBillNo = base.Columns["BillNo"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnEntryDate = base.Columns["EntryDate"];
                this.columnUserName = base.Columns["UserName"];
                this.columnRegMode = base.Columns["RegMode"];
                this.columnProductDesc = base.Columns["ProductDesc"];
                this.columnShowroomName = base.Columns["ShowroomName"];
                this.columnSellerCode = base.Columns["SellerCode"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWarrantyRegID = new System.Data.DataColumn("WarrantyRegID", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarrantyRegID);
                this.columnCustomerCode = new System.Data.DataColumn("CustomerCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerName = new System.Data.DataColumn("CustomerName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerAddress = new System.Data.DataColumn("CustomerAddress", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerAddress);
                this.columnTelephoneNo = new System.Data.DataColumn("TelephoneNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneNo);
                this.columnMobileNo = new System.Data.DataColumn("MobileNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnEmail = new System.Data.DataColumn("Email", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnSalesPersonID = new System.Data.DataColumn("SalesPersonID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPersonID);
                this.columnPurchaseDate = new System.Data.DataColumn("PurchaseDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseDate);
                this.columnProductID = new System.Data.DataColumn("ProductID", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnSerialNo = new System.Data.DataColumn("SerialNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNo);
                this.columnSellerName = new System.Data.DataColumn("SellerName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellerName);
                this.columnBillNo = new System.Data.DataColumn("BillNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillNo);
                this.columnRemarks = new System.Data.DataColumn("Remarks", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnEntryDate = new System.Data.DataColumn("EntryDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryDate);
                this.columnUserName = new System.Data.DataColumn("UserName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnRegMode = new System.Data.DataColumn("RegMode", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegMode);
                this.columnProductDesc = new System.Data.DataColumn("ProductDesc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductDesc);
                this.columnShowroomName = new System.Data.DataColumn("ShowroomName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowroomName);
                this.columnSellerCode = new System.Data.DataColumn("SellerCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellerCode);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RptWarrantyActRow NewRptWarrantyActRow() {
                return ((RptWarrantyActRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new RptWarrantyActRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(RptWarrantyActRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RptWarrantyActRowChanged != null)) {
                    this.RptWarrantyActRowChanged(this, new RptWarrantyActRowChangeEvent(((RptWarrantyActRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RptWarrantyActRowChanging != null)) {
                    this.RptWarrantyActRowChanging(this, new RptWarrantyActRowChangeEvent(((RptWarrantyActRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RptWarrantyActRowDeleted != null)) {
                    this.RptWarrantyActRowDeleted(this, new RptWarrantyActRowChangeEvent(((RptWarrantyActRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RptWarrantyActRowDeleting != null)) {
                    this.RptWarrantyActRowDeleting(this, new RptWarrantyActRowChangeEvent(((RptWarrantyActRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRptWarrantyActRow(RptWarrantyActRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DSRptWarrantyAct ds = new DSRptWarrantyAct();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RptWarrantyActDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RptWarrantyActRow : System.Data.DataRow {
            
            private RptWarrantyActDataTable tableRptWarrantyAct;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RptWarrantyActRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRptWarrantyAct = ((RptWarrantyActDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long WarrantyRegID {
                get {
                    try {
                        return ((long)(this[this.tableRptWarrantyAct.WarrantyRegIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WarrantyRegID\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.WarrantyRegIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.CustomerCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CustomerCode\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.CustomerCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.CustomerNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.CustomerNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerAddress {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.CustomerAddressColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CustomerAddress\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.CustomerAddressColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TelephoneNo {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.TelephoneNoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TelephoneNo\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.TelephoneNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.MobileNoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.MobileNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.EmailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Email\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.EmailColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesPersonID {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.SalesPersonIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SalesPersonID\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.SalesPersonIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PurchaseDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableRptWarrantyAct.PurchaseDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PurchaseDate\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.PurchaseDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ProductID {
                get {
                    try {
                        return ((long)(this[this.tableRptWarrantyAct.ProductIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ProductID\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.ProductIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SerialNo {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.SerialNoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SerialNo\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.SerialNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SellerName {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.SellerNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SellerName\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.SellerNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillNo {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.BillNoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BillNo\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.BillNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.RemarksColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Remarks\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.RemarksColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EntryDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableRptWarrantyAct.EntryDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EntryDate\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.EntryDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserName {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.UserNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UserName\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.UserNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long RegMode {
                get {
                    try {
                        return ((long)(this[this.tableRptWarrantyAct.RegModeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RegMode\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.RegModeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductDesc {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.ProductDescColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ProductDesc\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.ProductDescColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShowroomName {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.ShowroomNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ShowroomName\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.ShowroomNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SellerCode {
                get {
                    try {
                        return ((string)(this[this.tableRptWarrantyAct.SellerCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SellerCode\' in table \'RptWarrantyAct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRptWarrantyAct.SellerCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarrantyRegIDNull() {
                return this.IsNull(this.tableRptWarrantyAct.WarrantyRegIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarrantyRegIDNull() {
                this[this.tableRptWarrantyAct.WarrantyRegIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableRptWarrantyAct.CustomerCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableRptWarrantyAct.CustomerCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableRptWarrantyAct.CustomerNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableRptWarrantyAct.CustomerNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerAddressNull() {
                return this.IsNull(this.tableRptWarrantyAct.CustomerAddressColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerAddressNull() {
                this[this.tableRptWarrantyAct.CustomerAddressColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelephoneNoNull() {
                return this.IsNull(this.tableRptWarrantyAct.TelephoneNoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelephoneNoNull() {
                this[this.tableRptWarrantyAct.TelephoneNoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableRptWarrantyAct.MobileNoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNoNull() {
                this[this.tableRptWarrantyAct.MobileNoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableRptWarrantyAct.EmailColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableRptWarrantyAct.EmailColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesPersonIDNull() {
                return this.IsNull(this.tableRptWarrantyAct.SalesPersonIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesPersonIDNull() {
                this[this.tableRptWarrantyAct.SalesPersonIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseDateNull() {
                return this.IsNull(this.tableRptWarrantyAct.PurchaseDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseDateNull() {
                this[this.tableRptWarrantyAct.PurchaseDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductIDNull() {
                return this.IsNull(this.tableRptWarrantyAct.ProductIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductIDNull() {
                this[this.tableRptWarrantyAct.ProductIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerialNoNull() {
                return this.IsNull(this.tableRptWarrantyAct.SerialNoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerialNoNull() {
                this[this.tableRptWarrantyAct.SerialNoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSellerNameNull() {
                return this.IsNull(this.tableRptWarrantyAct.SellerNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSellerNameNull() {
                this[this.tableRptWarrantyAct.SellerNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillNoNull() {
                return this.IsNull(this.tableRptWarrantyAct.BillNoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillNoNull() {
                this[this.tableRptWarrantyAct.BillNoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableRptWarrantyAct.RemarksColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableRptWarrantyAct.RemarksColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntryDateNull() {
                return this.IsNull(this.tableRptWarrantyAct.EntryDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntryDateNull() {
                this[this.tableRptWarrantyAct.EntryDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserNameNull() {
                return this.IsNull(this.tableRptWarrantyAct.UserNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserNameNull() {
                this[this.tableRptWarrantyAct.UserNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegModeNull() {
                return this.IsNull(this.tableRptWarrantyAct.RegModeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegModeNull() {
                this[this.tableRptWarrantyAct.RegModeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductDescNull() {
                return this.IsNull(this.tableRptWarrantyAct.ProductDescColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductDescNull() {
                this[this.tableRptWarrantyAct.ProductDescColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShowroomNameNull() {
                return this.IsNull(this.tableRptWarrantyAct.ShowroomNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShowroomNameNull() {
                this[this.tableRptWarrantyAct.ShowroomNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSellerCodeNull() {
                return this.IsNull(this.tableRptWarrantyAct.SellerCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSellerCodeNull() {
                this[this.tableRptWarrantyAct.SellerCodeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RptWarrantyActRowChangeEvent : System.EventArgs {
            
            private RptWarrantyActRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RptWarrantyActRowChangeEvent(RptWarrantyActRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RptWarrantyActRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591